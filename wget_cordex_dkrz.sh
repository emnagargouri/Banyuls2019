#!/bin/bash
##############################################################################
# ESG Federation download script
#
# Template version: 1.2
# Generated by esgf-data.dkrz.de - 2019/02/06 10:47:21
# Search URL: http://esgf-data.dkrz.de/esg-search/wget/?distrib=false&dataset_id=cordex.output.EUR-11.CLMcom.MPI-M-MPI-ESM-LR.historical.r1i1p1.CCLM4-8-17.v1.mon.tas.v20140515|esgf1.dkrz.de&dataset_id=cordex.output.EUR-11.CLMcom.ICHEC-EC-EARTH.rcp85.r12i1p1.CCLM4-8-17.v1.mon.pr.v20140515|esgf1.dkrz.de&dataset_id=cordex.output.EUR-11.CLMcom.ICHEC-EC-EARTH.historical.r12i1p1.CCLM4-8-17.v1.mon.tas.v20140515|esgf1.dkrz.de&dataset_id=cordex.output.EUR-11.CLMcom.CNRM-CERFACS-CNRM-CM5.rcp85.r1i1p1.CCLM4-8-17.v1.mon.tas.v20140515|esgf1.dkrz.de&dataset_id=cordex.output.EUR-11.CLMcom.MPI-M-MPI-ESM-LR.historical.r1i1p1.CCLM4-8-17.v1.mon.pr.v20140515|esgf1.dkrz.de&dataset_id=cordex.output.EUR-11.CLMcom.MOHC-HadGEM2-ES.rcp85.r1i1p1.CCLM4-8-17.v1.mon.tas.v20150320|esgf1.dkrz.de&dataset_id=cordex.output.EUR-11.CLMcom.MOHC-HadGEM2-ES.historical.r1i1p1.CCLM4-8-17.v1.mon.tas.v20150320|esgf1.dkrz.de&dataset_id=cordex.output.EUR-11.CLMcom.MOHC-HadGEM2-ES.historical.r1i1p1.CCLM4-8-17.v1.mon.pr.v20150320|esgf1.dkrz.de&dataset_id=cordex.output.EUR-11.CLMcom.ICHEC-EC-EARTH.historical.r12i1p1.CCLM4-8-17.v1.mon.pr.v20140515|esgf1.dkrz.de&dataset_id=cordex.output.EUR-11.CLMcom.CNRM-CERFACS-CNRM-CM5.historical.r1i1p1.CCLM4-8-17.v1.mon.tas.v20140515|esgf1.dkrz.de&dataset_id=cordex.output.EUR-11.CLMcom.MPI-M-MPI-ESM-LR.rcp85.r1i1p1.CCLM4-8-17.v1.mon.tas.v20140515|esgf1.dkrz.de&dataset_id=cordex.output.EUR-11.CLMcom.MPI-M-MPI-ESM-LR.rcp85.r1i1p1.CCLM4-8-17.v1.mon.pr.v20140515|esgf1.dkrz.de&dataset_id=cordex.output.EUR-11.CLMcom.MOHC-HadGEM2-ES.rcp85.r1i1p1.CCLM4-8-17.v1.mon.pr.v20150320|esgf1.dkrz.de&dataset_id=cordex.output.EUR-11.CLMcom.ICHEC-EC-EARTH.rcp85.r12i1p1.CCLM4-8-17.v1.mon.tas.v20140515|esgf1.dkrz.de&dataset_id=cordex.output.EUR-11.CLMcom.CNRM-CERFACS-CNRM-CM5.rcp85.r1i1p1.CCLM4-8-17.v1.mon.pr.v20140515|esgf1.dkrz.de&dataset_id=cordex.output.EUR-11.CLMcom.CNRM-CERFACS-CNRM-CM5.historical.r1i1p1.CCLM4-8-17.v1.mon.pr.v20140515|esgf1.dkrz.de&download_structure=project,driving_model,rcm_name,experiment,variable
#
###############################################################################
# first be sure it's bash... anything out of bash or sh will break
# and the test will assure we are not using sh instead of bash
if [ $BASH ] && [ `basename $BASH` != bash ]; then
    echo "######## This is a bash script! ##############" 
    echo "Change the execution bit 'chmod u+x $0' or start with 'bash $0' instead of sh."
    echo "Trying to recover automatically..."
    sleep 1
    /bin/bash $0 $@
    exit $?
fi

version=1.3.2
CACHE_FILE=.$(basename $0).status
openId=
search_url='http://esgf-data.dkrz.de/esg-search/wget/?distrib=false&dataset_id=cordex.output.EUR-11.CLMcom.MPI-M-MPI-ESM-LR.historical.r1i1p1.CCLM4-8-17.v1.mon.tas.v20140515|esgf1.dkrz.de&dataset_id=cordex.output.EUR-11.CLMcom.ICHEC-EC-EARTH.rcp85.r12i1p1.CCLM4-8-17.v1.mon.pr.v20140515|esgf1.dkrz.de&dataset_id=cordex.output.EUR-11.CLMcom.ICHEC-EC-EARTH.historical.r12i1p1.CCLM4-8-17.v1.mon.tas.v20140515|esgf1.dkrz.de&dataset_id=cordex.output.EUR-11.CLMcom.CNRM-CERFACS-CNRM-CM5.rcp85.r1i1p1.CCLM4-8-17.v1.mon.tas.v20140515|esgf1.dkrz.de&dataset_id=cordex.output.EUR-11.CLMcom.MPI-M-MPI-ESM-LR.historical.r1i1p1.CCLM4-8-17.v1.mon.pr.v20140515|esgf1.dkrz.de&dataset_id=cordex.output.EUR-11.CLMcom.MOHC-HadGEM2-ES.rcp85.r1i1p1.CCLM4-8-17.v1.mon.tas.v20150320|esgf1.dkrz.de&dataset_id=cordex.output.EUR-11.CLMcom.MOHC-HadGEM2-ES.historical.r1i1p1.CCLM4-8-17.v1.mon.tas.v20150320|esgf1.dkrz.de&dataset_id=cordex.output.EUR-11.CLMcom.MOHC-HadGEM2-ES.historical.r1i1p1.CCLM4-8-17.v1.mon.pr.v20150320|esgf1.dkrz.de&dataset_id=cordex.output.EUR-11.CLMcom.ICHEC-EC-EARTH.historical.r12i1p1.CCLM4-8-17.v1.mon.pr.v20140515|esgf1.dkrz.de&dataset_id=cordex.output.EUR-11.CLMcom.CNRM-CERFACS-CNRM-CM5.historical.r1i1p1.CCLM4-8-17.v1.mon.tas.v20140515|esgf1.dkrz.de&dataset_id=cordex.output.EUR-11.CLMcom.MPI-M-MPI-ESM-LR.rcp85.r1i1p1.CCLM4-8-17.v1.mon.tas.v20140515|esgf1.dkrz.de&dataset_id=cordex.output.EUR-11.CLMcom.MPI-M-MPI-ESM-LR.rcp85.r1i1p1.CCLM4-8-17.v1.mon.pr.v20140515|esgf1.dkrz.de&dataset_id=cordex.output.EUR-11.CLMcom.MOHC-HadGEM2-ES.rcp85.r1i1p1.CCLM4-8-17.v1.mon.pr.v20150320|esgf1.dkrz.de&dataset_id=cordex.output.EUR-11.CLMcom.ICHEC-EC-EARTH.rcp85.r12i1p1.CCLM4-8-17.v1.mon.tas.v20140515|esgf1.dkrz.de&dataset_id=cordex.output.EUR-11.CLMcom.CNRM-CERFACS-CNRM-CM5.rcp85.r1i1p1.CCLM4-8-17.v1.mon.pr.v20140515|esgf1.dkrz.de&dataset_id=cordex.output.EUR-11.CLMcom.CNRM-CERFACS-CNRM-CM5.historical.r1i1p1.CCLM4-8-17.v1.mon.pr.v20140515|esgf1.dkrz.de&download_structure=project,driving_model,rcm_name,experiment,variable'

#These are the embedded files to be downloaded
download_files="$(cat <<EOF--dataset.file.url.chksum_type.chksum
'CORDEX/CNRM-CERFACS-CNRM-CM5/CCLM4-8-17/historical/pr/pr_EUR-11_CNRM-CERFACS-CNRM-CM5_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_195001-195012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/CNRM-CERFACS-CNRM-CM5/historical/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20140515/pr_EUR-11_CNRM-CERFACS-CNRM-CM5_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_195001-195012.nc' 'SHA256' '75580eb80e913f686c0da098b8dd7b3b1e1eb557edaba1995dafc7c941a9595d'
'CORDEX/CNRM-CERFACS-CNRM-CM5/CCLM4-8-17/historical/pr/pr_EUR-11_CNRM-CERFACS-CNRM-CM5_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_195101-196012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/CNRM-CERFACS-CNRM-CM5/historical/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20140515/pr_EUR-11_CNRM-CERFACS-CNRM-CM5_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_195101-196012.nc' 'SHA256' '5188db8afef32fbc1958b094a02b6d9b2edc0771d4221d853ba21bcec512639c'
'CORDEX/CNRM-CERFACS-CNRM-CM5/CCLM4-8-17/historical/pr/pr_EUR-11_CNRM-CERFACS-CNRM-CM5_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_196101-197012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/CNRM-CERFACS-CNRM-CM5/historical/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20140515/pr_EUR-11_CNRM-CERFACS-CNRM-CM5_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_196101-197012.nc' 'SHA256' '74dc798114f9451cfae9b96914c5cf355216cae3c1dbd9978aacf71e3e42a506'
'CORDEX/CNRM-CERFACS-CNRM-CM5/CCLM4-8-17/historical/pr/pr_EUR-11_CNRM-CERFACS-CNRM-CM5_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_197101-198012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/CNRM-CERFACS-CNRM-CM5/historical/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20140515/pr_EUR-11_CNRM-CERFACS-CNRM-CM5_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_197101-198012.nc' 'SHA256' 'bbaa222688f292d05f653f7bd8416f2e908ff64804ea7f8229d7a995a0097aa6'
'CORDEX/CNRM-CERFACS-CNRM-CM5/CCLM4-8-17/historical/pr/pr_EUR-11_CNRM-CERFACS-CNRM-CM5_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_198101-199012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/CNRM-CERFACS-CNRM-CM5/historical/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20140515/pr_EUR-11_CNRM-CERFACS-CNRM-CM5_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_198101-199012.nc' 'SHA256' '9a5f38e9e3c593927e0190fa36895f4264c23526cc84cff252943784647e3135'
'CORDEX/CNRM-CERFACS-CNRM-CM5/CCLM4-8-17/historical/pr/pr_EUR-11_CNRM-CERFACS-CNRM-CM5_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_199101-200012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/CNRM-CERFACS-CNRM-CM5/historical/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20140515/pr_EUR-11_CNRM-CERFACS-CNRM-CM5_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_199101-200012.nc' 'SHA256' '8535557daaf70623a652f8212a658e5f5ffc7fcb8a31eb36365f2c43c0b0958a'
'CORDEX/CNRM-CERFACS-CNRM-CM5/CCLM4-8-17/historical/pr/pr_EUR-11_CNRM-CERFACS-CNRM-CM5_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_200101-200512.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/CNRM-CERFACS-CNRM-CM5/historical/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20140515/pr_EUR-11_CNRM-CERFACS-CNRM-CM5_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_200101-200512.nc' 'SHA256' '7695b41e38f813749a984c24e9c99b44bde18619a5b00d555dc6abe59119044d'
'CORDEX/CNRM-CERFACS-CNRM-CM5/CCLM4-8-17/historical/tas/tas_EUR-11_CNRM-CERFACS-CNRM-CM5_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_195001-195012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/CNRM-CERFACS-CNRM-CM5/historical/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20140515/tas_EUR-11_CNRM-CERFACS-CNRM-CM5_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_195001-195012.nc' 'SHA256' 'cc8da5d9c41116f20df1621c9662c35f5808f5258e8f7c403882c03446ef3272'
'CORDEX/CNRM-CERFACS-CNRM-CM5/CCLM4-8-17/historical/tas/tas_EUR-11_CNRM-CERFACS-CNRM-CM5_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_195101-196012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/CNRM-CERFACS-CNRM-CM5/historical/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20140515/tas_EUR-11_CNRM-CERFACS-CNRM-CM5_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_195101-196012.nc' 'SHA256' '9c1e3956ac77f51c63a14d0b1b067136e888ae1b096f35151becaf48fed33220'
'CORDEX/CNRM-CERFACS-CNRM-CM5/CCLM4-8-17/historical/tas/tas_EUR-11_CNRM-CERFACS-CNRM-CM5_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_196101-197012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/CNRM-CERFACS-CNRM-CM5/historical/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20140515/tas_EUR-11_CNRM-CERFACS-CNRM-CM5_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_196101-197012.nc' 'SHA256' '60acaa6cf64088640cf5396e08a15bfb9793feb84059b4fe500577f1c6c86044'
'CORDEX/CNRM-CERFACS-CNRM-CM5/CCLM4-8-17/historical/tas/tas_EUR-11_CNRM-CERFACS-CNRM-CM5_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_197101-198012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/CNRM-CERFACS-CNRM-CM5/historical/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20140515/tas_EUR-11_CNRM-CERFACS-CNRM-CM5_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_197101-198012.nc' 'SHA256' 'e43d8bf8c1b0a314a4d1724acf67b0d86a37179728077b01ca69fb360256dc48'
'CORDEX/CNRM-CERFACS-CNRM-CM5/CCLM4-8-17/historical/tas/tas_EUR-11_CNRM-CERFACS-CNRM-CM5_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_198101-199012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/CNRM-CERFACS-CNRM-CM5/historical/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20140515/tas_EUR-11_CNRM-CERFACS-CNRM-CM5_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_198101-199012.nc' 'SHA256' 'c028858c1eb9e182b0e9a82e289fc5ecd5ed04a332cbfd6b157462a8a8f68c71'
'CORDEX/CNRM-CERFACS-CNRM-CM5/CCLM4-8-17/historical/tas/tas_EUR-11_CNRM-CERFACS-CNRM-CM5_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_199101-200012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/CNRM-CERFACS-CNRM-CM5/historical/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20140515/tas_EUR-11_CNRM-CERFACS-CNRM-CM5_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_199101-200012.nc' 'SHA256' '8cdb43d93053b7517a4bf1a72c36d8710db424243e09872d7f8362b32f10b937'
'CORDEX/CNRM-CERFACS-CNRM-CM5/CCLM4-8-17/historical/tas/tas_EUR-11_CNRM-CERFACS-CNRM-CM5_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_200101-200512.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/CNRM-CERFACS-CNRM-CM5/historical/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20140515/tas_EUR-11_CNRM-CERFACS-CNRM-CM5_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_200101-200512.nc' 'SHA256' '9d05a7b5549addba88fd8ca1ed5ca8747d4c78541668e93103387e01356b5fad'
'CORDEX/CNRM-CERFACS-CNRM-CM5/CCLM4-8-17/rcp85/pr/pr_EUR-11_CNRM-CERFACS-CNRM-CM5_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_200601-201012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/CNRM-CERFACS-CNRM-CM5/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20140515/pr_EUR-11_CNRM-CERFACS-CNRM-CM5_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_200601-201012.nc' 'SHA256' '72b07b8ab24e6d8a58b794794ebdc1e97e4b7fe270bef7be45e5bf29ec500614'
'CORDEX/CNRM-CERFACS-CNRM-CM5/CCLM4-8-17/rcp85/pr/pr_EUR-11_CNRM-CERFACS-CNRM-CM5_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_201101-202012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/CNRM-CERFACS-CNRM-CM5/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20140515/pr_EUR-11_CNRM-CERFACS-CNRM-CM5_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_201101-202012.nc' 'SHA256' '8e35b903a7a53d9018dc0ec1e75ad55f097a3ad6395babf2b4ad86f85df6e095'
'CORDEX/CNRM-CERFACS-CNRM-CM5/CCLM4-8-17/rcp85/pr/pr_EUR-11_CNRM-CERFACS-CNRM-CM5_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_202101-203012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/CNRM-CERFACS-CNRM-CM5/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20140515/pr_EUR-11_CNRM-CERFACS-CNRM-CM5_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_202101-203012.nc' 'SHA256' '166f6209efdd9de010147b852e6616702707968b5fd6c656ab95a9391043ee90'
'CORDEX/CNRM-CERFACS-CNRM-CM5/CCLM4-8-17/rcp85/pr/pr_EUR-11_CNRM-CERFACS-CNRM-CM5_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_203101-204012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/CNRM-CERFACS-CNRM-CM5/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20140515/pr_EUR-11_CNRM-CERFACS-CNRM-CM5_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_203101-204012.nc' 'SHA256' 'cba485a23878fc338c6c2ea2526e53327079ba5bb94cff4a0b2064ac792559be'
'CORDEX/CNRM-CERFACS-CNRM-CM5/CCLM4-8-17/rcp85/pr/pr_EUR-11_CNRM-CERFACS-CNRM-CM5_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_204101-205012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/CNRM-CERFACS-CNRM-CM5/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20140515/pr_EUR-11_CNRM-CERFACS-CNRM-CM5_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_204101-205012.nc' 'SHA256' 'd4bb4d9d0a50446fcfe8bdf14a2d1a414786db45e034f46040cc483a68aea628'
'CORDEX/CNRM-CERFACS-CNRM-CM5/CCLM4-8-17/rcp85/pr/pr_EUR-11_CNRM-CERFACS-CNRM-CM5_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_205101-206012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/CNRM-CERFACS-CNRM-CM5/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20140515/pr_EUR-11_CNRM-CERFACS-CNRM-CM5_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_205101-206012.nc' 'SHA256' 'b3f7536fac20b454d4ca80bd3608eabfacd14a30d12d16a6eb2b36c026c3b5de'
'CORDEX/CNRM-CERFACS-CNRM-CM5/CCLM4-8-17/rcp85/pr/pr_EUR-11_CNRM-CERFACS-CNRM-CM5_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_206101-207012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/CNRM-CERFACS-CNRM-CM5/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20140515/pr_EUR-11_CNRM-CERFACS-CNRM-CM5_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_206101-207012.nc' 'SHA256' '345c44fa24855906f6200fd5ac9fffac9b8a8a4febf24204ae5c8c13245dc015'
'CORDEX/CNRM-CERFACS-CNRM-CM5/CCLM4-8-17/rcp85/pr/pr_EUR-11_CNRM-CERFACS-CNRM-CM5_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_207101-208012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/CNRM-CERFACS-CNRM-CM5/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20140515/pr_EUR-11_CNRM-CERFACS-CNRM-CM5_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_207101-208012.nc' 'SHA256' 'ba07f950514669c454151f5528a0b4c15514c78fd298804c40b6dd5c72a13f82'
'CORDEX/CNRM-CERFACS-CNRM-CM5/CCLM4-8-17/rcp85/pr/pr_EUR-11_CNRM-CERFACS-CNRM-CM5_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_208101-209012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/CNRM-CERFACS-CNRM-CM5/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20140515/pr_EUR-11_CNRM-CERFACS-CNRM-CM5_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_208101-209012.nc' 'SHA256' '0b598978748edc3fcd9f2d24729fb6e61b30a25e3ef0f75d2837b553ed2c0cae'
'CORDEX/CNRM-CERFACS-CNRM-CM5/CCLM4-8-17/rcp85/pr/pr_EUR-11_CNRM-CERFACS-CNRM-CM5_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_209101-210012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/CNRM-CERFACS-CNRM-CM5/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20140515/pr_EUR-11_CNRM-CERFACS-CNRM-CM5_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_209101-210012.nc' 'SHA256' '9f35cfd15bd699fa0971d437ad231f400e92d7b47dcd8ce7bb930e5f347791a5'
'CORDEX/CNRM-CERFACS-CNRM-CM5/CCLM4-8-17/rcp85/tas/tas_EUR-11_CNRM-CERFACS-CNRM-CM5_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_200601-201012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/CNRM-CERFACS-CNRM-CM5/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20140515/tas_EUR-11_CNRM-CERFACS-CNRM-CM5_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_200601-201012.nc' 'SHA256' 'f708b22ded92c6e4c4a30a57bd7fd055f2a28a5d047ba51dd53d29e6d0b7c73c'
'CORDEX/CNRM-CERFACS-CNRM-CM5/CCLM4-8-17/rcp85/tas/tas_EUR-11_CNRM-CERFACS-CNRM-CM5_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_201101-202012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/CNRM-CERFACS-CNRM-CM5/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20140515/tas_EUR-11_CNRM-CERFACS-CNRM-CM5_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_201101-202012.nc' 'SHA256' '82671fc5f1f2bad85d41555663237f0a6789ffe5f37f98739d555c912ff01309'
'CORDEX/CNRM-CERFACS-CNRM-CM5/CCLM4-8-17/rcp85/tas/tas_EUR-11_CNRM-CERFACS-CNRM-CM5_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_202101-203012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/CNRM-CERFACS-CNRM-CM5/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20140515/tas_EUR-11_CNRM-CERFACS-CNRM-CM5_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_202101-203012.nc' 'SHA256' 'd9b97b4d8d494ad0c8445c6eb5b132291105ad6a0867360f31a377306be3047b'
'CORDEX/CNRM-CERFACS-CNRM-CM5/CCLM4-8-17/rcp85/tas/tas_EUR-11_CNRM-CERFACS-CNRM-CM5_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_203101-204012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/CNRM-CERFACS-CNRM-CM5/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20140515/tas_EUR-11_CNRM-CERFACS-CNRM-CM5_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_203101-204012.nc' 'SHA256' '402b199d3b8e186226f1b0be2ce162d52b2ecaf5455c596584f4ebeb89cb15ad'
'CORDEX/CNRM-CERFACS-CNRM-CM5/CCLM4-8-17/rcp85/tas/tas_EUR-11_CNRM-CERFACS-CNRM-CM5_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_204101-205012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/CNRM-CERFACS-CNRM-CM5/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20140515/tas_EUR-11_CNRM-CERFACS-CNRM-CM5_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_204101-205012.nc' 'SHA256' '553349eae52cbd668813025b0e533cd725af7ee93f12f784cef48831d30bed46'
'CORDEX/CNRM-CERFACS-CNRM-CM5/CCLM4-8-17/rcp85/tas/tas_EUR-11_CNRM-CERFACS-CNRM-CM5_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_205101-206012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/CNRM-CERFACS-CNRM-CM5/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20140515/tas_EUR-11_CNRM-CERFACS-CNRM-CM5_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_205101-206012.nc' 'SHA256' 'e076a7ab6c74bf17c588b1caced041f321e52e9ccbbb9c30ea47f9066f10a4e4'
'CORDEX/CNRM-CERFACS-CNRM-CM5/CCLM4-8-17/rcp85/tas/tas_EUR-11_CNRM-CERFACS-CNRM-CM5_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_206101-207012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/CNRM-CERFACS-CNRM-CM5/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20140515/tas_EUR-11_CNRM-CERFACS-CNRM-CM5_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_206101-207012.nc' 'SHA256' 'acaa9212ee3cc817c05833807ac49dc82c4f1987c6f3aa137963f4c4a79fcaeb'
'CORDEX/CNRM-CERFACS-CNRM-CM5/CCLM4-8-17/rcp85/tas/tas_EUR-11_CNRM-CERFACS-CNRM-CM5_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_207101-208012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/CNRM-CERFACS-CNRM-CM5/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20140515/tas_EUR-11_CNRM-CERFACS-CNRM-CM5_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_207101-208012.nc' 'SHA256' 'cf2c1089bfd33ef14b5ea90e63c49955faee6da7c71c50ec803014e689e3bd68'
'CORDEX/CNRM-CERFACS-CNRM-CM5/CCLM4-8-17/rcp85/tas/tas_EUR-11_CNRM-CERFACS-CNRM-CM5_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_208101-209012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/CNRM-CERFACS-CNRM-CM5/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20140515/tas_EUR-11_CNRM-CERFACS-CNRM-CM5_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_208101-209012.nc' 'SHA256' 'a7e6d034b76c839f77c956487e22aac080d1ce13a822f9c8095d865ab6349421'
'CORDEX/CNRM-CERFACS-CNRM-CM5/CCLM4-8-17/rcp85/tas/tas_EUR-11_CNRM-CERFACS-CNRM-CM5_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_209101-210012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/CNRM-CERFACS-CNRM-CM5/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20140515/tas_EUR-11_CNRM-CERFACS-CNRM-CM5_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_209101-210012.nc' 'SHA256' '4cb122d00e038cf2f6161b4486124f00ad1077a86809c55073d08fc7c20227a3'
'CORDEX/ICHEC-EC-EARTH/CCLM4-8-17/historical/pr/pr_EUR-11_ICHEC-EC-EARTH_historical_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_194912-195012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/ICHEC-EC-EARTH/historical/r12i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20140515/pr_EUR-11_ICHEC-EC-EARTH_historical_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_194912-195012.nc' 'SHA256' '5d319e51527b7025c76c83937ebe63e4e10aa162585f2e73dd82fd28c996bda8'
'CORDEX/ICHEC-EC-EARTH/CCLM4-8-17/historical/pr/pr_EUR-11_ICHEC-EC-EARTH_historical_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_195101-196012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/ICHEC-EC-EARTH/historical/r12i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20140515/pr_EUR-11_ICHEC-EC-EARTH_historical_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_195101-196012.nc' 'SHA256' 'f967359951fe10943e88c43e8514a6b3d9bcc750b29580b57541a05bb08db20b'
'CORDEX/ICHEC-EC-EARTH/CCLM4-8-17/historical/pr/pr_EUR-11_ICHEC-EC-EARTH_historical_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_196101-197012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/ICHEC-EC-EARTH/historical/r12i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20140515/pr_EUR-11_ICHEC-EC-EARTH_historical_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_196101-197012.nc' 'SHA256' 'd525d17533345c418c98a13523167903e27071c51d00dfe1dac4fc4b411d34dc'
'CORDEX/ICHEC-EC-EARTH/CCLM4-8-17/historical/pr/pr_EUR-11_ICHEC-EC-EARTH_historical_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_197101-198012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/ICHEC-EC-EARTH/historical/r12i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20140515/pr_EUR-11_ICHEC-EC-EARTH_historical_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_197101-198012.nc' 'SHA256' '2b9ba2c83837ea4edc0720a3d922d390f0ee92230ac0cd232298319a484ae739'
'CORDEX/ICHEC-EC-EARTH/CCLM4-8-17/historical/pr/pr_EUR-11_ICHEC-EC-EARTH_historical_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_198101-199012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/ICHEC-EC-EARTH/historical/r12i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20140515/pr_EUR-11_ICHEC-EC-EARTH_historical_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_198101-199012.nc' 'SHA256' 'a48906b7e9a3b24b41fe30b138066e309e47e4dd1ee24a7ed5dc4d820fd4ae91'
'CORDEX/ICHEC-EC-EARTH/CCLM4-8-17/historical/pr/pr_EUR-11_ICHEC-EC-EARTH_historical_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_199101-200012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/ICHEC-EC-EARTH/historical/r12i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20140515/pr_EUR-11_ICHEC-EC-EARTH_historical_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_199101-200012.nc' 'SHA256' '05eb4744b1221cb38510a2bdd35883b62b3fcda2aaa7dd42d9b51b394f00c36c'
'CORDEX/ICHEC-EC-EARTH/CCLM4-8-17/historical/pr/pr_EUR-11_ICHEC-EC-EARTH_historical_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_200101-200512.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/ICHEC-EC-EARTH/historical/r12i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20140515/pr_EUR-11_ICHEC-EC-EARTH_historical_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_200101-200512.nc' 'SHA256' '5c11993ec52952ff33c5ba2b0361adbdd54f60799df381bcf7498e612549243b'
'CORDEX/ICHEC-EC-EARTH/CCLM4-8-17/historical/tas/tas_EUR-11_ICHEC-EC-EARTH_historical_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_194912-195012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/ICHEC-EC-EARTH/historical/r12i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20140515/tas_EUR-11_ICHEC-EC-EARTH_historical_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_194912-195012.nc' 'SHA256' '1d594965fa63029c88cb978d3accb5e1602b2c06ecdccb45af7235850475b2ad'
'CORDEX/ICHEC-EC-EARTH/CCLM4-8-17/historical/tas/tas_EUR-11_ICHEC-EC-EARTH_historical_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_195101-196012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/ICHEC-EC-EARTH/historical/r12i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20140515/tas_EUR-11_ICHEC-EC-EARTH_historical_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_195101-196012.nc' 'SHA256' '79e012eddbbc9bcdc165db994cd70a8e248c828b2c1ce1248ebd80c6ce71d08d'
'CORDEX/ICHEC-EC-EARTH/CCLM4-8-17/historical/tas/tas_EUR-11_ICHEC-EC-EARTH_historical_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_196101-197012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/ICHEC-EC-EARTH/historical/r12i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20140515/tas_EUR-11_ICHEC-EC-EARTH_historical_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_196101-197012.nc' 'SHA256' '0c50744e34027e975ca714286f09c3b82bd052b5b85dc2157cf3270ec21f79df'
'CORDEX/ICHEC-EC-EARTH/CCLM4-8-17/historical/tas/tas_EUR-11_ICHEC-EC-EARTH_historical_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_197101-198012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/ICHEC-EC-EARTH/historical/r12i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20140515/tas_EUR-11_ICHEC-EC-EARTH_historical_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_197101-198012.nc' 'SHA256' 'e378d424ec2c53d99d67a1be343f5017d184bb0363a657a6995a27f33ccef050'
'CORDEX/ICHEC-EC-EARTH/CCLM4-8-17/historical/tas/tas_EUR-11_ICHEC-EC-EARTH_historical_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_198101-199012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/ICHEC-EC-EARTH/historical/r12i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20140515/tas_EUR-11_ICHEC-EC-EARTH_historical_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_198101-199012.nc' 'SHA256' '1d5495a56f897572d6cc57b354b8473cd7f05044d5614db559cbd15d18b121d7'
'CORDEX/ICHEC-EC-EARTH/CCLM4-8-17/historical/tas/tas_EUR-11_ICHEC-EC-EARTH_historical_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_199101-200012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/ICHEC-EC-EARTH/historical/r12i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20140515/tas_EUR-11_ICHEC-EC-EARTH_historical_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_199101-200012.nc' 'SHA256' '53e81dcc35fc6ee1cb2beb3fe233023839f97691b76400e324f7be4148cffc5a'
'CORDEX/ICHEC-EC-EARTH/CCLM4-8-17/historical/tas/tas_EUR-11_ICHEC-EC-EARTH_historical_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_200101-200512.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/ICHEC-EC-EARTH/historical/r12i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20140515/tas_EUR-11_ICHEC-EC-EARTH_historical_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_200101-200512.nc' 'SHA256' 'ae28ffe01c3618ac2db072076a4124fd16d44a44a605aa2613578beeb98621a4'
'CORDEX/ICHEC-EC-EARTH/CCLM4-8-17/rcp85/pr/pr_EUR-11_ICHEC-EC-EARTH_rcp85_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_200601-201012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/ICHEC-EC-EARTH/rcp85/r12i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20140515/pr_EUR-11_ICHEC-EC-EARTH_rcp85_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_200601-201012.nc' 'SHA256' 'bd62a33f80f0346d9ff9c625782b94ce4486ba7a58ecb3530e38e6f0cf644b6f'
'CORDEX/ICHEC-EC-EARTH/CCLM4-8-17/rcp85/pr/pr_EUR-11_ICHEC-EC-EARTH_rcp85_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_201101-202012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/ICHEC-EC-EARTH/rcp85/r12i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20140515/pr_EUR-11_ICHEC-EC-EARTH_rcp85_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_201101-202012.nc' 'SHA256' '818f4b38a2c86a393cbc6ea672399098523552cb88902cf44364abd1a39f2261'
'CORDEX/ICHEC-EC-EARTH/CCLM4-8-17/rcp85/pr/pr_EUR-11_ICHEC-EC-EARTH_rcp85_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_202101-203012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/ICHEC-EC-EARTH/rcp85/r12i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20140515/pr_EUR-11_ICHEC-EC-EARTH_rcp85_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_202101-203012.nc' 'SHA256' '9f7ada89abaa3c47199eddc4ef511f4013f153d4b0d1cae880ed7cacd198e0ff'
'CORDEX/ICHEC-EC-EARTH/CCLM4-8-17/rcp85/pr/pr_EUR-11_ICHEC-EC-EARTH_rcp85_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_203101-204012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/ICHEC-EC-EARTH/rcp85/r12i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20140515/pr_EUR-11_ICHEC-EC-EARTH_rcp85_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_203101-204012.nc' 'SHA256' '5213ff640008e3240d240d4ae3ffd663a3608897bd7b2767e2260da09d17a520'
'CORDEX/ICHEC-EC-EARTH/CCLM4-8-17/rcp85/pr/pr_EUR-11_ICHEC-EC-EARTH_rcp85_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_204101-205012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/ICHEC-EC-EARTH/rcp85/r12i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20140515/pr_EUR-11_ICHEC-EC-EARTH_rcp85_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_204101-205012.nc' 'SHA256' '38998b9a1da35536cb406224bbdcc2aba9eaf22fe4e3af49b0c7ae329eacb18b'
'CORDEX/ICHEC-EC-EARTH/CCLM4-8-17/rcp85/pr/pr_EUR-11_ICHEC-EC-EARTH_rcp85_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_205101-206012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/ICHEC-EC-EARTH/rcp85/r12i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20140515/pr_EUR-11_ICHEC-EC-EARTH_rcp85_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_205101-206012.nc' 'SHA256' '0725b974b8618ef39520fd9b98b105ee673e19f5556ceca4164f9e99f5e2734f'
'CORDEX/ICHEC-EC-EARTH/CCLM4-8-17/rcp85/pr/pr_EUR-11_ICHEC-EC-EARTH_rcp85_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_206101-207012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/ICHEC-EC-EARTH/rcp85/r12i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20140515/pr_EUR-11_ICHEC-EC-EARTH_rcp85_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_206101-207012.nc' 'SHA256' 'aa003ed6044bd59de0de3f9aa046dd117dea0febab8ae329c71ec7032bbc02a9'
'CORDEX/ICHEC-EC-EARTH/CCLM4-8-17/rcp85/pr/pr_EUR-11_ICHEC-EC-EARTH_rcp85_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_207101-208012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/ICHEC-EC-EARTH/rcp85/r12i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20140515/pr_EUR-11_ICHEC-EC-EARTH_rcp85_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_207101-208012.nc' 'SHA256' 'e7071e9d094bb37fda47a5e77c89287ef78f45b7d6c27d7ee48e9088901ab30c'
'CORDEX/ICHEC-EC-EARTH/CCLM4-8-17/rcp85/pr/pr_EUR-11_ICHEC-EC-EARTH_rcp85_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_208101-209012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/ICHEC-EC-EARTH/rcp85/r12i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20140515/pr_EUR-11_ICHEC-EC-EARTH_rcp85_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_208101-209012.nc' 'SHA256' 'd97977ddf9d92958b0eea79798580f43b911996beec20e0f1157f6cbe88eb4cf'
'CORDEX/ICHEC-EC-EARTH/CCLM4-8-17/rcp85/pr/pr_EUR-11_ICHEC-EC-EARTH_rcp85_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_209101-210012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/ICHEC-EC-EARTH/rcp85/r12i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20140515/pr_EUR-11_ICHEC-EC-EARTH_rcp85_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_209101-210012.nc' 'SHA256' '0dfc0042b2933fd3a024586d9e1b997269d5ccb471560c2347b05122860083c7'
'CORDEX/ICHEC-EC-EARTH/CCLM4-8-17/rcp85/tas/tas_EUR-11_ICHEC-EC-EARTH_rcp85_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_200601-201012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/ICHEC-EC-EARTH/rcp85/r12i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20140515/tas_EUR-11_ICHEC-EC-EARTH_rcp85_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_200601-201012.nc' 'SHA256' 'e5c636f498382b8ed10b0179e7e591ed4ab852d7ae9f2d277acbeb28a1afa807'
'CORDEX/ICHEC-EC-EARTH/CCLM4-8-17/rcp85/tas/tas_EUR-11_ICHEC-EC-EARTH_rcp85_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_201101-202012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/ICHEC-EC-EARTH/rcp85/r12i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20140515/tas_EUR-11_ICHEC-EC-EARTH_rcp85_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_201101-202012.nc' 'SHA256' '41840b52d147660d295e9cce8faa54e83eddc27b128767a7b1c4ac9b65ccc9a2'
'CORDEX/ICHEC-EC-EARTH/CCLM4-8-17/rcp85/tas/tas_EUR-11_ICHEC-EC-EARTH_rcp85_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_202101-203012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/ICHEC-EC-EARTH/rcp85/r12i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20140515/tas_EUR-11_ICHEC-EC-EARTH_rcp85_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_202101-203012.nc' 'SHA256' 'a48b02bcbec6eaf33cedc53c6f6471a696983ce8f79efb271fc07244b86af978'
'CORDEX/ICHEC-EC-EARTH/CCLM4-8-17/rcp85/tas/tas_EUR-11_ICHEC-EC-EARTH_rcp85_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_203101-204012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/ICHEC-EC-EARTH/rcp85/r12i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20140515/tas_EUR-11_ICHEC-EC-EARTH_rcp85_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_203101-204012.nc' 'SHA256' '949f63f7245753f52306350d9c1cef455a1988f859ff87158941b6138e3fccb6'
'CORDEX/ICHEC-EC-EARTH/CCLM4-8-17/rcp85/tas/tas_EUR-11_ICHEC-EC-EARTH_rcp85_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_204101-205012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/ICHEC-EC-EARTH/rcp85/r12i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20140515/tas_EUR-11_ICHEC-EC-EARTH_rcp85_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_204101-205012.nc' 'SHA256' 'd3b52f2b51a8c1ea40e2901d98932dcb1d5d432c8d415a610a1c07f1719fadb7'
'CORDEX/ICHEC-EC-EARTH/CCLM4-8-17/rcp85/tas/tas_EUR-11_ICHEC-EC-EARTH_rcp85_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_205101-206012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/ICHEC-EC-EARTH/rcp85/r12i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20140515/tas_EUR-11_ICHEC-EC-EARTH_rcp85_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_205101-206012.nc' 'SHA256' 'f8bb7fe6f266711e70b856ec4de68133f9a8287fefd121017542e962c24f88f5'
'CORDEX/ICHEC-EC-EARTH/CCLM4-8-17/rcp85/tas/tas_EUR-11_ICHEC-EC-EARTH_rcp85_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_206101-207012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/ICHEC-EC-EARTH/rcp85/r12i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20140515/tas_EUR-11_ICHEC-EC-EARTH_rcp85_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_206101-207012.nc' 'SHA256' 'dc5a16a2af7fc4e40d96fb89922fa7ee618bd4493d66ee868c4cadd5ea832674'
'CORDEX/ICHEC-EC-EARTH/CCLM4-8-17/rcp85/tas/tas_EUR-11_ICHEC-EC-EARTH_rcp85_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_207101-208012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/ICHEC-EC-EARTH/rcp85/r12i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20140515/tas_EUR-11_ICHEC-EC-EARTH_rcp85_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_207101-208012.nc' 'SHA256' 'af7211c8d0728a7b4aa6c66ed8945f3e8e1e89a2039212f033fddb9cba90b4ee'
'CORDEX/ICHEC-EC-EARTH/CCLM4-8-17/rcp85/tas/tas_EUR-11_ICHEC-EC-EARTH_rcp85_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_208101-209012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/ICHEC-EC-EARTH/rcp85/r12i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20140515/tas_EUR-11_ICHEC-EC-EARTH_rcp85_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_208101-209012.nc' 'SHA256' '1b6495407ad7f6c2089f14ee792edab4a0418948de1e1a1047fb80f6e808201c'
'CORDEX/ICHEC-EC-EARTH/CCLM4-8-17/rcp85/tas/tas_EUR-11_ICHEC-EC-EARTH_rcp85_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_209101-210012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/ICHEC-EC-EARTH/rcp85/r12i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20140515/tas_EUR-11_ICHEC-EC-EARTH_rcp85_r12i1p1_CLMcom-CCLM4-8-17_v1_mon_209101-210012.nc' 'SHA256' '8460726d45aa39f574b0655696bd78515c490ea5fba4b901510406624beec8c1'
'CORDEX/MOHC-HadGEM2-ES/CCLM4-8-17/historical/pr/pr_EUR-11_MOHC-HadGEM2-ES_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_194912-195012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MOHC-HadGEM2-ES/historical/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20150320/pr_EUR-11_MOHC-HadGEM2-ES_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_194912-195012.nc' 'SHA256' 'd70fe73226f55af7485614fd72740fb69a4f6dadbab69bec2fc35d4d46f3a9f7'
'CORDEX/MOHC-HadGEM2-ES/CCLM4-8-17/historical/pr/pr_EUR-11_MOHC-HadGEM2-ES_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_195101-196012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MOHC-HadGEM2-ES/historical/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20150320/pr_EUR-11_MOHC-HadGEM2-ES_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_195101-196012.nc' 'SHA256' 'f6eef9cfe3208eabfae6d044194659664834d70eb34e8eda4de55c670450bcc0'
'CORDEX/MOHC-HadGEM2-ES/CCLM4-8-17/historical/pr/pr_EUR-11_MOHC-HadGEM2-ES_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_196101-197012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MOHC-HadGEM2-ES/historical/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20150320/pr_EUR-11_MOHC-HadGEM2-ES_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_196101-197012.nc' 'SHA256' 'fd8733362396c986072d55946f469d6e6cca26a9e710a12185b3935e7638ef20'
'CORDEX/MOHC-HadGEM2-ES/CCLM4-8-17/historical/pr/pr_EUR-11_MOHC-HadGEM2-ES_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_197101-198012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MOHC-HadGEM2-ES/historical/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20150320/pr_EUR-11_MOHC-HadGEM2-ES_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_197101-198012.nc' 'SHA256' '5fde5ff405e2055c14328de64cbf5688f904b4cf02e8f390eaf5d1866fff0882'
'CORDEX/MOHC-HadGEM2-ES/CCLM4-8-17/historical/pr/pr_EUR-11_MOHC-HadGEM2-ES_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_198101-199012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MOHC-HadGEM2-ES/historical/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20150320/pr_EUR-11_MOHC-HadGEM2-ES_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_198101-199012.nc' 'SHA256' '58270ba31a1b7d0cddc103d8289eff12b9f35752402cda0953d50dbb7c6370fc'
'CORDEX/MOHC-HadGEM2-ES/CCLM4-8-17/historical/pr/pr_EUR-11_MOHC-HadGEM2-ES_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_199101-200012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MOHC-HadGEM2-ES/historical/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20150320/pr_EUR-11_MOHC-HadGEM2-ES_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_199101-200012.nc' 'SHA256' '8f1e80ea759e60f4a57851e429b07d3528e4c1895a30315fddc4933c1b6e8767'
'CORDEX/MOHC-HadGEM2-ES/CCLM4-8-17/historical/pr/pr_EUR-11_MOHC-HadGEM2-ES_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_200101-200512.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MOHC-HadGEM2-ES/historical/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20150320/pr_EUR-11_MOHC-HadGEM2-ES_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_200101-200512.nc' 'SHA256' 'a98afa0ff8072b16531d7fe0c7290bcea75ac6b8ab30293ea874e6ee466c4ce7'
'CORDEX/MOHC-HadGEM2-ES/CCLM4-8-17/historical/tas/tas_EUR-11_MOHC-HadGEM2-ES_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_194912-195012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MOHC-HadGEM2-ES/historical/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20150320/tas_EUR-11_MOHC-HadGEM2-ES_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_194912-195012.nc' 'SHA256' '667a2835284fb997e1014c79edd0da0df33b14292bcda6f604cd698a9a0011f4'
'CORDEX/MOHC-HadGEM2-ES/CCLM4-8-17/historical/tas/tas_EUR-11_MOHC-HadGEM2-ES_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_195101-196012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MOHC-HadGEM2-ES/historical/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20150320/tas_EUR-11_MOHC-HadGEM2-ES_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_195101-196012.nc' 'SHA256' 'e313273444880dee537b685ab3ca6dc9fbafafc1d068a082616717db13d6540d'
'CORDEX/MOHC-HadGEM2-ES/CCLM4-8-17/historical/tas/tas_EUR-11_MOHC-HadGEM2-ES_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_196101-197012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MOHC-HadGEM2-ES/historical/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20150320/tas_EUR-11_MOHC-HadGEM2-ES_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_196101-197012.nc' 'SHA256' '24cac668b6d59a01181940cb125361ca66753ab697a02e7aa01529f3488a1b57'
'CORDEX/MOHC-HadGEM2-ES/CCLM4-8-17/historical/tas/tas_EUR-11_MOHC-HadGEM2-ES_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_197101-198012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MOHC-HadGEM2-ES/historical/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20150320/tas_EUR-11_MOHC-HadGEM2-ES_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_197101-198012.nc' 'SHA256' '1301c6038b9ee388492a286c7906070419798a26037213c2d20399eab39bed9f'
'CORDEX/MOHC-HadGEM2-ES/CCLM4-8-17/historical/tas/tas_EUR-11_MOHC-HadGEM2-ES_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_198101-199012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MOHC-HadGEM2-ES/historical/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20150320/tas_EUR-11_MOHC-HadGEM2-ES_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_198101-199012.nc' 'SHA256' '85c069ec75d89389db3568802d2ccb9acad7a04cc9f6e76f395ffa71519aa7fb'
'CORDEX/MOHC-HadGEM2-ES/CCLM4-8-17/historical/tas/tas_EUR-11_MOHC-HadGEM2-ES_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_199101-200012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MOHC-HadGEM2-ES/historical/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20150320/tas_EUR-11_MOHC-HadGEM2-ES_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_199101-200012.nc' 'SHA256' 'b72fc4994b7bd38483ce30dcde0d510ff69fd91e27778fe6276bf23df7b09477'
'CORDEX/MOHC-HadGEM2-ES/CCLM4-8-17/historical/tas/tas_EUR-11_MOHC-HadGEM2-ES_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_200101-200512.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MOHC-HadGEM2-ES/historical/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20150320/tas_EUR-11_MOHC-HadGEM2-ES_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_200101-200512.nc' 'SHA256' '328bc2e429c7e7b631c00640b26c642dba4e554532008885b2e82be5fba96fe9'
'CORDEX/MOHC-HadGEM2-ES/CCLM4-8-17/rcp85/pr/pr_EUR-11_MOHC-HadGEM2-ES_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_200601-201012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MOHC-HadGEM2-ES/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20150320/pr_EUR-11_MOHC-HadGEM2-ES_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_200601-201012.nc' 'SHA256' '74f5da8aa7da5e85a3e389fd3dba081f05445e61e5e3600c41789bce99167d27'
'CORDEX/MOHC-HadGEM2-ES/CCLM4-8-17/rcp85/pr/pr_EUR-11_MOHC-HadGEM2-ES_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_201101-202012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MOHC-HadGEM2-ES/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20150320/pr_EUR-11_MOHC-HadGEM2-ES_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_201101-202012.nc' 'SHA256' 'f0ff01f88a99357d53d619ef17b86f1c91464895e0c81b7ebafe6117a5393409'
'CORDEX/MOHC-HadGEM2-ES/CCLM4-8-17/rcp85/pr/pr_EUR-11_MOHC-HadGEM2-ES_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_202101-203012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MOHC-HadGEM2-ES/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20150320/pr_EUR-11_MOHC-HadGEM2-ES_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_202101-203012.nc' 'SHA256' 'acb9cf2ab2939dd10ecaedb87e992dfa3fe66d882634bbe9a4509bed5712e5e2'
'CORDEX/MOHC-HadGEM2-ES/CCLM4-8-17/rcp85/pr/pr_EUR-11_MOHC-HadGEM2-ES_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_203101-204012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MOHC-HadGEM2-ES/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20150320/pr_EUR-11_MOHC-HadGEM2-ES_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_203101-204012.nc' 'SHA256' '6b4d4047f52e11b545f7c852f0074e702e602a5570cdb1e7fe4e3dc4557a819c'
'CORDEX/MOHC-HadGEM2-ES/CCLM4-8-17/rcp85/pr/pr_EUR-11_MOHC-HadGEM2-ES_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_204101-205012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MOHC-HadGEM2-ES/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20150320/pr_EUR-11_MOHC-HadGEM2-ES_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_204101-205012.nc' 'SHA256' '30c63f0ebbe75e9b61f0d886938d032fcc95b03338029388a49359659561e707'
'CORDEX/MOHC-HadGEM2-ES/CCLM4-8-17/rcp85/pr/pr_EUR-11_MOHC-HadGEM2-ES_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_205101-206012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MOHC-HadGEM2-ES/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20150320/pr_EUR-11_MOHC-HadGEM2-ES_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_205101-206012.nc' 'SHA256' 'f1ece2241b406d94f5c4410c5ba820e3a28ebf23178c279ece26d760ac2e3d16'
'CORDEX/MOHC-HadGEM2-ES/CCLM4-8-17/rcp85/pr/pr_EUR-11_MOHC-HadGEM2-ES_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_206101-207012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MOHC-HadGEM2-ES/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20150320/pr_EUR-11_MOHC-HadGEM2-ES_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_206101-207012.nc' 'SHA256' '89fcab9a50c1c6e256e8e2d2c91776fc5ea8bf5d9cfbc01423da2b0bbfeadadd'
'CORDEX/MOHC-HadGEM2-ES/CCLM4-8-17/rcp85/pr/pr_EUR-11_MOHC-HadGEM2-ES_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_207101-208012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MOHC-HadGEM2-ES/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20150320/pr_EUR-11_MOHC-HadGEM2-ES_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_207101-208012.nc' 'SHA256' '1ff7a3b1e6da3ffc19cb3029d4812c74b8eaa1f99f44aa9f1fe19a37f37f1c7e'
'CORDEX/MOHC-HadGEM2-ES/CCLM4-8-17/rcp85/pr/pr_EUR-11_MOHC-HadGEM2-ES_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_208101-209012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MOHC-HadGEM2-ES/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20150320/pr_EUR-11_MOHC-HadGEM2-ES_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_208101-209012.nc' 'SHA256' 'b1bb85f0036267f86110276641e3d4dd1a3c4326b12e8d6f35129e09fee4c99c'
'CORDEX/MOHC-HadGEM2-ES/CCLM4-8-17/rcp85/pr/pr_EUR-11_MOHC-HadGEM2-ES_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_209101-209912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MOHC-HadGEM2-ES/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20150320/pr_EUR-11_MOHC-HadGEM2-ES_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_209101-209912.nc' 'SHA256' '0bcc7ec885cc4593d0988d711ee07848f067aae62916ad18d64573037400e192'
'CORDEX/MOHC-HadGEM2-ES/CCLM4-8-17/rcp85/tas/tas_EUR-11_MOHC-HadGEM2-ES_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_200601-201012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MOHC-HadGEM2-ES/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20150320/tas_EUR-11_MOHC-HadGEM2-ES_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_200601-201012.nc' 'SHA256' '71e2bef853fcca7e5f59558c14ad698045cee11986e6d9006baf46d2ba6ea078'
'CORDEX/MOHC-HadGEM2-ES/CCLM4-8-17/rcp85/tas/tas_EUR-11_MOHC-HadGEM2-ES_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_201101-202012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MOHC-HadGEM2-ES/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20150320/tas_EUR-11_MOHC-HadGEM2-ES_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_201101-202012.nc' 'SHA256' '6c5d3f0580de2cfdf69f7a6ed2667bf68479097fa61c628197fe78739925cd06'
'CORDEX/MOHC-HadGEM2-ES/CCLM4-8-17/rcp85/tas/tas_EUR-11_MOHC-HadGEM2-ES_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_202101-203012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MOHC-HadGEM2-ES/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20150320/tas_EUR-11_MOHC-HadGEM2-ES_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_202101-203012.nc' 'SHA256' 'a6dffae28439b056e9b6a65a8903c84a58b9defd6371c4857590ed64f271c47e'
'CORDEX/MOHC-HadGEM2-ES/CCLM4-8-17/rcp85/tas/tas_EUR-11_MOHC-HadGEM2-ES_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_203101-204012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MOHC-HadGEM2-ES/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20150320/tas_EUR-11_MOHC-HadGEM2-ES_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_203101-204012.nc' 'SHA256' 'e23acdcbe0a0951e05f35f801f057a15e71fa57b3c37249473519a897b603a64'
'CORDEX/MOHC-HadGEM2-ES/CCLM4-8-17/rcp85/tas/tas_EUR-11_MOHC-HadGEM2-ES_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_204101-205012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MOHC-HadGEM2-ES/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20150320/tas_EUR-11_MOHC-HadGEM2-ES_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_204101-205012.nc' 'SHA256' 'fcad9c7e14efe4197fb238b8337c9b1bbcc8cf355c22d80d5c9fffa143f8df6a'
'CORDEX/MOHC-HadGEM2-ES/CCLM4-8-17/rcp85/tas/tas_EUR-11_MOHC-HadGEM2-ES_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_205101-206012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MOHC-HadGEM2-ES/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20150320/tas_EUR-11_MOHC-HadGEM2-ES_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_205101-206012.nc' 'SHA256' 'c77aeee1954c328f86d889823f034078313b17043c649de8e62029a2852b090d'
'CORDEX/MOHC-HadGEM2-ES/CCLM4-8-17/rcp85/tas/tas_EUR-11_MOHC-HadGEM2-ES_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_206101-207012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MOHC-HadGEM2-ES/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20150320/tas_EUR-11_MOHC-HadGEM2-ES_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_206101-207012.nc' 'SHA256' 'cd1234ed6f815c9762f89762e3030c7c6dff293187ca851a26d593cf56db471d'
'CORDEX/MOHC-HadGEM2-ES/CCLM4-8-17/rcp85/tas/tas_EUR-11_MOHC-HadGEM2-ES_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_207101-208012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MOHC-HadGEM2-ES/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20150320/tas_EUR-11_MOHC-HadGEM2-ES_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_207101-208012.nc' 'SHA256' 'eb7cc959050e5fe19c8814608aa99c2a3b145cb478d6ae318a69aeb4e9dace66'
'CORDEX/MOHC-HadGEM2-ES/CCLM4-8-17/rcp85/tas/tas_EUR-11_MOHC-HadGEM2-ES_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_208101-209012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MOHC-HadGEM2-ES/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20150320/tas_EUR-11_MOHC-HadGEM2-ES_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_208101-209012.nc' 'SHA256' '9fbe8ad632de1788d4e138d25b554cf429ee56f8ebc9b95b92e4119b27e80067'
'CORDEX/MOHC-HadGEM2-ES/CCLM4-8-17/rcp85/tas/tas_EUR-11_MOHC-HadGEM2-ES_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_209101-209912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MOHC-HadGEM2-ES/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20150320/tas_EUR-11_MOHC-HadGEM2-ES_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_209101-209912.nc' 'SHA256' '97404abe1f8b4635532ba373aa920cb84413fcd823c9afb92c33a48f08bd6469'
'CORDEX/MPI-M-MPI-ESM-LR/CCLM4-8-17/historical/pr/pr_EUR-11_MPI-M-MPI-ESM-LR_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_194912-195012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MPI-M-MPI-ESM-LR/historical/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20140515/pr_EUR-11_MPI-M-MPI-ESM-LR_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_194912-195012.nc' 'SHA256' '6d2e56251579de5f4b52befe04d72d54e3981cdf14ab508441b05fa1cd4cacce'
'CORDEX/MPI-M-MPI-ESM-LR/CCLM4-8-17/historical/pr/pr_EUR-11_MPI-M-MPI-ESM-LR_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_195101-196012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MPI-M-MPI-ESM-LR/historical/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20140515/pr_EUR-11_MPI-M-MPI-ESM-LR_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_195101-196012.nc' 'SHA256' '6d11d809aff5636660a632f78c97b9a88e7bcb857b3164ded2f316a3d390b07f'
'CORDEX/MPI-M-MPI-ESM-LR/CCLM4-8-17/historical/pr/pr_EUR-11_MPI-M-MPI-ESM-LR_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_196101-197012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MPI-M-MPI-ESM-LR/historical/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20140515/pr_EUR-11_MPI-M-MPI-ESM-LR_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_196101-197012.nc' 'SHA256' '0dbf4ce67bcf6c7b4b9f079d30651e1904b9f0a0a2cf3ddd762a95e53fa31368'
'CORDEX/MPI-M-MPI-ESM-LR/CCLM4-8-17/historical/pr/pr_EUR-11_MPI-M-MPI-ESM-LR_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_197101-198012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MPI-M-MPI-ESM-LR/historical/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20140515/pr_EUR-11_MPI-M-MPI-ESM-LR_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_197101-198012.nc' 'SHA256' 'bd4167106c9d49569891ffa1fbd992ca776d808946b73035ef712ca52104aa81'
'CORDEX/MPI-M-MPI-ESM-LR/CCLM4-8-17/historical/pr/pr_EUR-11_MPI-M-MPI-ESM-LR_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_198101-199012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MPI-M-MPI-ESM-LR/historical/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20140515/pr_EUR-11_MPI-M-MPI-ESM-LR_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_198101-199012.nc' 'SHA256' '90fd4013d2122b409e31362caf3dfb287bad3ea34ef2958a49ff96844fbe2dca'
'CORDEX/MPI-M-MPI-ESM-LR/CCLM4-8-17/historical/pr/pr_EUR-11_MPI-M-MPI-ESM-LR_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_199101-200012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MPI-M-MPI-ESM-LR/historical/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20140515/pr_EUR-11_MPI-M-MPI-ESM-LR_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_199101-200012.nc' 'SHA256' '556fe9c0a90743fe9e2b4d02a502f1628eef677df4db269856b6ce6cb124f716'
'CORDEX/MPI-M-MPI-ESM-LR/CCLM4-8-17/historical/pr/pr_EUR-11_MPI-M-MPI-ESM-LR_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_200101-200512.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MPI-M-MPI-ESM-LR/historical/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20140515/pr_EUR-11_MPI-M-MPI-ESM-LR_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_200101-200512.nc' 'SHA256' '7e7a9c1063344a984250ba1e0ceab13483413c0dcc36029b749720889fe28836'
'CORDEX/MPI-M-MPI-ESM-LR/CCLM4-8-17/historical/tas/tas_EUR-11_MPI-M-MPI-ESM-LR_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_194912-195012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MPI-M-MPI-ESM-LR/historical/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20140515/tas_EUR-11_MPI-M-MPI-ESM-LR_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_194912-195012.nc' 'SHA256' '849f0fecf30b1ccc72632ca1498099be375c8d3888e0f089e2217db271e473c7'
'CORDEX/MPI-M-MPI-ESM-LR/CCLM4-8-17/historical/tas/tas_EUR-11_MPI-M-MPI-ESM-LR_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_195101-196012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MPI-M-MPI-ESM-LR/historical/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20140515/tas_EUR-11_MPI-M-MPI-ESM-LR_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_195101-196012.nc' 'SHA256' '31586079108959e687b8105c6029dd305540a153be656cbfe12956b7e0c6c22b'
'CORDEX/MPI-M-MPI-ESM-LR/CCLM4-8-17/historical/tas/tas_EUR-11_MPI-M-MPI-ESM-LR_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_196101-197012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MPI-M-MPI-ESM-LR/historical/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20140515/tas_EUR-11_MPI-M-MPI-ESM-LR_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_196101-197012.nc' 'SHA256' '893074a61606fc8b61375f6245a0f8a26ea8453d3dbe60b2c2fd42057128de04'
'CORDEX/MPI-M-MPI-ESM-LR/CCLM4-8-17/historical/tas/tas_EUR-11_MPI-M-MPI-ESM-LR_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_197101-198012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MPI-M-MPI-ESM-LR/historical/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20140515/tas_EUR-11_MPI-M-MPI-ESM-LR_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_197101-198012.nc' 'SHA256' '254bf62236f95aec1e15d00ed9d6b8382dcb3bc1c08155c2a74dd7e56717fe6b'
'CORDEX/MPI-M-MPI-ESM-LR/CCLM4-8-17/historical/tas/tas_EUR-11_MPI-M-MPI-ESM-LR_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_198101-199012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MPI-M-MPI-ESM-LR/historical/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20140515/tas_EUR-11_MPI-M-MPI-ESM-LR_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_198101-199012.nc' 'SHA256' '53a37a097d1cdf565dbc255a6aa617da158f168887b060c42a11465730035996'
'CORDEX/MPI-M-MPI-ESM-LR/CCLM4-8-17/historical/tas/tas_EUR-11_MPI-M-MPI-ESM-LR_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_199101-200012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MPI-M-MPI-ESM-LR/historical/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20140515/tas_EUR-11_MPI-M-MPI-ESM-LR_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_199101-200012.nc' 'SHA256' '75b0932b513b76239f309746759119c845a68830a2256e811de123232e607617'
'CORDEX/MPI-M-MPI-ESM-LR/CCLM4-8-17/historical/tas/tas_EUR-11_MPI-M-MPI-ESM-LR_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_200101-200512.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MPI-M-MPI-ESM-LR/historical/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20140515/tas_EUR-11_MPI-M-MPI-ESM-LR_historical_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_200101-200512.nc' 'SHA256' '99381313da08a810c586aef523b8588f446d5ce02d8196361bfd613eff09b500'
'CORDEX/MPI-M-MPI-ESM-LR/CCLM4-8-17/rcp85/pr/pr_EUR-11_MPI-M-MPI-ESM-LR_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_200601-201012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MPI-M-MPI-ESM-LR/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20140515/pr_EUR-11_MPI-M-MPI-ESM-LR_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_200601-201012.nc' 'SHA256' 'd79cdb2c4ac7a60d29d2d0729407caf4b0c3dfae6ad9d3b610dea0fae0a366a9'
'CORDEX/MPI-M-MPI-ESM-LR/CCLM4-8-17/rcp85/pr/pr_EUR-11_MPI-M-MPI-ESM-LR_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_201101-202012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MPI-M-MPI-ESM-LR/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20140515/pr_EUR-11_MPI-M-MPI-ESM-LR_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_201101-202012.nc' 'SHA256' '80c080d3a2bffe8f4fc110e1e15e0e6e5bdbbf1bf5f4ff4aac828b5414be1149'
'CORDEX/MPI-M-MPI-ESM-LR/CCLM4-8-17/rcp85/pr/pr_EUR-11_MPI-M-MPI-ESM-LR_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_202101-203012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MPI-M-MPI-ESM-LR/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20140515/pr_EUR-11_MPI-M-MPI-ESM-LR_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_202101-203012.nc' 'SHA256' 'c38cd0fd5b047be6cff67f80d6c440545c436d3811f6e7be0e47f24731f9ec00'
'CORDEX/MPI-M-MPI-ESM-LR/CCLM4-8-17/rcp85/pr/pr_EUR-11_MPI-M-MPI-ESM-LR_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_203101-204012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MPI-M-MPI-ESM-LR/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20140515/pr_EUR-11_MPI-M-MPI-ESM-LR_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_203101-204012.nc' 'SHA256' '1530cc4ea9aa60e7772fae792d55a54eee4d1c8bf9dde13bdfc5f44e40018d8b'
'CORDEX/MPI-M-MPI-ESM-LR/CCLM4-8-17/rcp85/pr/pr_EUR-11_MPI-M-MPI-ESM-LR_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_204101-205012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MPI-M-MPI-ESM-LR/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20140515/pr_EUR-11_MPI-M-MPI-ESM-LR_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_204101-205012.nc' 'SHA256' 'fed88b345c647f5c90c012401357d47bebcd43d3a4d5bc6f9048f2078bea0075'
'CORDEX/MPI-M-MPI-ESM-LR/CCLM4-8-17/rcp85/pr/pr_EUR-11_MPI-M-MPI-ESM-LR_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_205101-206012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MPI-M-MPI-ESM-LR/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20140515/pr_EUR-11_MPI-M-MPI-ESM-LR_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_205101-206012.nc' 'SHA256' '92a12542d370397f3244be0c10985d221c62f348fc349b2037014be8860e2221'
'CORDEX/MPI-M-MPI-ESM-LR/CCLM4-8-17/rcp85/pr/pr_EUR-11_MPI-M-MPI-ESM-LR_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_206101-207012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MPI-M-MPI-ESM-LR/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20140515/pr_EUR-11_MPI-M-MPI-ESM-LR_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_206101-207012.nc' 'SHA256' 'c891f63aa4c787e2a28ff530bfcc1261f2c917a23f7c9d3d09b3c17e0d1b49e5'
'CORDEX/MPI-M-MPI-ESM-LR/CCLM4-8-17/rcp85/pr/pr_EUR-11_MPI-M-MPI-ESM-LR_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_207101-208012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MPI-M-MPI-ESM-LR/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20140515/pr_EUR-11_MPI-M-MPI-ESM-LR_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_207101-208012.nc' 'SHA256' '74ad978499e42fa18e651ad60e93c1b96e7d1b0ae3d08a192d420134b055f748'
'CORDEX/MPI-M-MPI-ESM-LR/CCLM4-8-17/rcp85/pr/pr_EUR-11_MPI-M-MPI-ESM-LR_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_208101-209012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MPI-M-MPI-ESM-LR/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20140515/pr_EUR-11_MPI-M-MPI-ESM-LR_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_208101-209012.nc' 'SHA256' 'd638a1004ae8ae94e01bd337d3a062a26c76a87d4ba80003d7d61e937828d928'
'CORDEX/MPI-M-MPI-ESM-LR/CCLM4-8-17/rcp85/pr/pr_EUR-11_MPI-M-MPI-ESM-LR_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_209101-210012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MPI-M-MPI-ESM-LR/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/pr/v20140515/pr_EUR-11_MPI-M-MPI-ESM-LR_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_209101-210012.nc' 'SHA256' '34487a186b8871b7094cb866bb8d06d643898ffbccfbb7e3ee1d537a318a6bab'
'CORDEX/MPI-M-MPI-ESM-LR/CCLM4-8-17/rcp85/tas/tas_EUR-11_MPI-M-MPI-ESM-LR_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_200601-201012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MPI-M-MPI-ESM-LR/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20140515/tas_EUR-11_MPI-M-MPI-ESM-LR_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_200601-201012.nc' 'SHA256' 'c28a28cff189eb0bdabef1f4196edd2183ca36473d8a7fdf35b03af70f714aef'
'CORDEX/MPI-M-MPI-ESM-LR/CCLM4-8-17/rcp85/tas/tas_EUR-11_MPI-M-MPI-ESM-LR_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_201101-202012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MPI-M-MPI-ESM-LR/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20140515/tas_EUR-11_MPI-M-MPI-ESM-LR_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_201101-202012.nc' 'SHA256' 'aba4f4a1f9a558cba95bba0cc472b64a295b0ce2b3883da95b50488d637bee2b'
'CORDEX/MPI-M-MPI-ESM-LR/CCLM4-8-17/rcp85/tas/tas_EUR-11_MPI-M-MPI-ESM-LR_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_202101-203012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MPI-M-MPI-ESM-LR/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20140515/tas_EUR-11_MPI-M-MPI-ESM-LR_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_202101-203012.nc' 'SHA256' '871f0f3756c63afc099dab7ca6666d17c802bead5ccf36dd680699246f3ea9b4'
'CORDEX/MPI-M-MPI-ESM-LR/CCLM4-8-17/rcp85/tas/tas_EUR-11_MPI-M-MPI-ESM-LR_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_203101-204012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MPI-M-MPI-ESM-LR/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20140515/tas_EUR-11_MPI-M-MPI-ESM-LR_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_203101-204012.nc' 'SHA256' 'fb1c179a6db5979742b8b6a71d75a1f476eb820262b1c75ff97e657cfbb9184d'
'CORDEX/MPI-M-MPI-ESM-LR/CCLM4-8-17/rcp85/tas/tas_EUR-11_MPI-M-MPI-ESM-LR_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_204101-205012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MPI-M-MPI-ESM-LR/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20140515/tas_EUR-11_MPI-M-MPI-ESM-LR_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_204101-205012.nc' 'SHA256' '33fa81225c0b3f476d67e4f568def111ba160ac4868434f25c6da408a4a5101c'
'CORDEX/MPI-M-MPI-ESM-LR/CCLM4-8-17/rcp85/tas/tas_EUR-11_MPI-M-MPI-ESM-LR_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_205101-206012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MPI-M-MPI-ESM-LR/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20140515/tas_EUR-11_MPI-M-MPI-ESM-LR_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_205101-206012.nc' 'SHA256' '63c77d8c9e9cefe12211be6b0962fe33ab982ceaf1709d0236c203fa9920d3e9'
'CORDEX/MPI-M-MPI-ESM-LR/CCLM4-8-17/rcp85/tas/tas_EUR-11_MPI-M-MPI-ESM-LR_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_206101-207012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MPI-M-MPI-ESM-LR/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20140515/tas_EUR-11_MPI-M-MPI-ESM-LR_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_206101-207012.nc' 'SHA256' '0c5fae4c762ffefb31aa153dfd1dc418168848a34d3b27a971a6c606315c897d'
'CORDEX/MPI-M-MPI-ESM-LR/CCLM4-8-17/rcp85/tas/tas_EUR-11_MPI-M-MPI-ESM-LR_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_207101-208012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MPI-M-MPI-ESM-LR/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20140515/tas_EUR-11_MPI-M-MPI-ESM-LR_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_207101-208012.nc' 'SHA256' 'e1cecc35afb21f4181af443c1b523a67c71ef6db78b024c3bfb6b070e55d9ff5'
'CORDEX/MPI-M-MPI-ESM-LR/CCLM4-8-17/rcp85/tas/tas_EUR-11_MPI-M-MPI-ESM-LR_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_208101-209012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MPI-M-MPI-ESM-LR/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20140515/tas_EUR-11_MPI-M-MPI-ESM-LR_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_208101-209012.nc' 'SHA256' '447ab196cb33734cd90619a1bf2477f96f1e80cca06e44651046337970833031'
'CORDEX/MPI-M-MPI-ESM-LR/CCLM4-8-17/rcp85/tas/tas_EUR-11_MPI-M-MPI-ESM-LR_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_209101-210012.nc' 'http://esgf1.dkrz.de/thredds/fileServer/cordex/cordex/output/EUR-11/CLMcom/MPI-M-MPI-ESM-LR/rcp85/r1i1p1/CLMcom-CCLM4-8-17/v1/mon/tas/v20140515/tas_EUR-11_MPI-M-MPI-ESM-LR_rcp85_r1i1p1_CLMcom-CCLM4-8-17_v1_mon_209101-210012.nc' 'SHA256' '778bdb9c7cf099c4de4386a16c20e84bf8c0cc38dfce6da39f732140613ec8b2'
EOF--dataset.file.url.chksum_type.chksum
)"

# ESG_HOME should point to the directory containing ESG credentials.
#   Default is $HOME/.esg
ESG_HOME=${ESG_HOME:-$HOME/.esg}
[[ -d $ESG_HOME ]] || mkdir -p $ESG_HOME

ESG_CREDENTIALS=${X509_USER_PROXY:-$ESG_HOME/credentials.pem}
ESG_CERT_DIR=${X509_CERT_DIR:-$ESG_HOME/certificates}
MYPROXY_STATUS=$HOME/.MyProxyLogon
COOKIE_JAR=$ESG_HOME/cookies
MYPROXY_GETCERT=$ESG_HOME/getcert.jar
CERT_EXPIRATION_WARNING=$((60 * 60 * 8))   #Eight hour (in seconds)

WGET_TRUSTED_CERTIFICATES=$ESG_HOME/certificates


# Configure checking of server SSL certificates.
#   Disabling server certificate checking can resolve problems with myproxy
#   servers being out of sync with datanodes.
CHECK_SERVER_CERT=${CHECK_SERVER_CERT:-Yes}

check_os() {
    local os_name=$(uname | awk '{print $1}')
    case ${os_name} in
        Linux)
            ((debug)) && echo "Linux operating system detected"
            LINUX=1
            MACOSX=0
            ;;
        Darwin)
            ((debug)) && echo "Mac OS X operating system detected"
            LINUX=0
            MACOSX=1
            ;;
        *)
            echo "Unrecognized OS [${os_name}]"
            return 1
            ;;
    esac
    return 0
}

#taken from http://stackoverflow.com/a/4025065/1182464
vercomp () {
    if [[ $1 == $2 ]]
    then
        return 0
    fi
    local IFS=.
    local i ver1=($1) ver2=($2)
    # fill empty fields in ver1 with zeros
    for ((i=${#ver1[@]}; i<${#ver2[@]}; i++))
    do
        ver1[i]=0
    done
    for ((i=0; i<${#ver1[@]}; i++))
    do
        if [[ -z ${ver2[i]} ]]
        then
            # fill empty fields in ver2 with zeros
            ver2[i]=0
        fi
        if ((10#${ver1[i]} > 10#${ver2[i]}))
        then
            return 1
        fi
        if ((10#${ver1[i]} < 10#${ver2[i]}))
        then
            return 2
        fi
    done
    return 0
}

check_commands() {
    #check wget
    local MIN_WGET_VERSION=1.10
    vercomp $(wget -V | sed -n 's/^.* \([1-9]\.[0-9.]*\) .*$/\1/p') $MIN_WGET_VERSION
    case $? in
        2) #lower
            wget -V
            echo
            echo "** ERROR: wget version is too old. Use version $MIN_WGET_VERSION or greater. **" >&2
            exit 1
    esac
}

usage() {
    echo "Usage: $(basename $0) [flags] [openid] [username]"
    echo "Flags is one of:"
    sed -n '/^while getopts/,/^done/  s/^\([^)]*\)[^#]*#\(.*$\)/\1 \2/p' $0
    echo
    echo "This command stores the states of the downloads in .$0.status"
    echo "For more information check the website: http://esgf.org/wiki/ESGF_wget"
}

#defaults
debug=0
clean_work=1

#parse flags
while getopts ':c:pfF:o:w:isuUndvqhHI:T' OPT; do
    case $OPT in
        H) skip_security=1 && use_http_sec=1;; #       : Authenticate with OpenID (username,) and password, without the need for a certificate.
        T) force_TLSv1=1;;              #       : Forces wget to use TLSv1. 
        c) ESG_CREDENTIALS="$OPTARG";;  #<cert> : use this certificate for authentication.
        f) force=1;;                    #       : force certificate retrieval (defaults to only once per day); for certificate-less authentication (see -H option), this flag will force login and refresh cookies.
        F) input_file="$OPTARG";;       #<file> : read input from file instead of the embedded one (use - to read from stdin)
        o) openId="$OPTARG";;           #<openid>: Provide OpenID instead of interactively asking for it.
        I) username_supplied="$OPTARG";;    #<user_id> : Explicitly set user ID.  By default, the user ID is extracted from the last component of the OpenID URL.  Use this flag to override this behaviour.                   
        w) output="$OPTARG";;           #<file> : Write embedded files into a file and exit
        i) insecure=1;;                 #       : set insecure mode, i.e. don't check server certificate
        s) skip_security=1 && use_cookies_for_http_basic_auth_start=1;;            #       : completely skip security. It will only work if the accessed data is not secured at all. -- works only if the accessed data is unsecured or a certificate exists or cookies are saved (latter applies to -H option only).
        u) update=1;;                   #       : Issue the search again and see if something has changed.
        U) update_files=1;;             #       : Update files from server overwriting local ones (detect with -u)
        n) dry_run=1;;                  #       : Don't download any files, just report.
        p) clean_work=0;;               #       : preserve data that failed checksum
        d) verbose=1;debug=1;;          #       : display debug information
        v) verbose=1;;                  #       : be more verbose
        q) quiet=1;;                    #       : be less verbose
        h) usage && exit 0;;            #       : displays this help
        \?) echo "Unknown option '$OPTARG'" >&2 && usage && exit 1;;
        \:) echo "Missing parameter for flag '$OPTARG'" >&2 && usage && exit 1;;
    esac
done
shift $(($OPTIND - 1))

#setup input as desired by the user
if [[ "$input_file" ]]; then
    if [[ "$input_file" == '-' ]]; then
        download_files="$(cat)" #read from STDIN
        exec 0</dev/tty #reopen STDIN as cat closed it
    else
        download_files="$(cat $input_file)" #read from file
    fi
fi

#if -w (output) was selected write file and finish:
if [[ "$output" ]]; then
    #check the file
    if [[ -f "$output" ]]; then
        read -p "Overwrite existing file $output? (y/N) " answ
        case $answ in y|Y|yes|Yes);; *) echo "Aborting then..."; exit 0;; esac
    fi
    echo "$download_files">$output
    exit
fi


#assure we have everything we need
check_commands

if ((update)); then
    echo "Checking the server for changes..."
    new_wget="$(wget "$search_url" -qO -)"
    compare_cmd="grep -vE '^(# Generated by|# Search URL|search_url=)'"
    if diff -q <(eval $compare_cmd<<<"$new_wget") <(eval $compare_cmd $0) >/dev/null; then
        echo "No changes detected."
    else
        echo "Wget was changed. Dowloading. (old renamed to $0.old.#N)"
        counter=0
        while [[ -f $0.old.$counter ]]; do ((counter++)); done
        mv $0 $0.old.$counter
        echo "$new_wget" > $0
    fi
    exit 0      
fi


##############################################################################
check_java() {
    if ! type java >& /dev/null; then
        echo "Java could not be found." >&2
        return 1
    fi
    if java -version 2>&1|grep openjdk >/dev/null; then
        openjdk=1;
    else
        openjdk=0;
    fi
    jversion=($(jversion=$(java -version 2>&1 | awk '/version/ {gsub("\"","");print $3}'); echo ${jversion//./ }))
    mVer=${jversion[1]}
    if [ $openjdk -eq 1 ]; then
        mVer=${jversion[0]}
        if ((mVer<5)); then
            echo "Openjdk detected. Version 9+ is required for retrieving the certificate." >&2
            echo "Current version seems older: $(java -version | head -n1) " >&2
            return 1
        fi
    else
    
        if ((mVer<5)); then
            echo "Java version 1.5+ is required for retrieving the certificate." >&2
            echo "Current version seems older: $(java -version | head -n1) " >&2
            return 1
        fi
    fi
}

check_myproxy_logon() {
    if ! type myproxy-logon >& /dev/null; then
	echo "myproxy-logon could not be found." >&2
	return 1
    fi
    echo "myproxy-logon found" >&2
}

proxy_to_java() {
    local proxy_user proxy_pass proxy_server proxy_port
    eval $(sed 's#^\(https\?://\)\?\(\([^:@]*\)\(:\([^@]*\)\)\?@\)\?\([^:/]*\)\(:\([0-9]*\)\)\?.*#proxy_user=\3;proxy_pass=\5;proxy_server=\6;proxy_port=\8#'<<<$http_proxy)
    local JAVA_PROXY=
    [[ "$proxy_server" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttp.proxyHost=$proxy_server"
    [[ "$proxy_port" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttp.proxyPort=$proxy_port"
    eval $(sed 's#^\(https\?://\)\?\(\([^:@]*\)\(:\([^@]*\)\)\?@\)\?\([^:/]*\)\(:\([0-9]*\)\)\?.*#proxy_user=\3;proxy_pass=\5;proxy_server=\6;proxy_port=\8#'<<<$https_proxy)
    [[ "$proxy_server" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttps.proxyHost=$proxy_server"
    [[ "$proxy_port" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttps.proxyPort=$proxy_port"
    
    echo "$JAVA_PROXY"
}

# get certificates from github
get_certificates() {
    # don't if this was already done today
    [[ -z $force && "$(find $ESG_CERT_DIR -type d -mtime -1 2>/dev/null)" ]] && return 0
    echo -n "Retrieving Federation Certificates..." >&2

    if ! wget -O $ESG_HOME/esg-truststore.ts --no-check-certificate https://github.com/ESGF/esgf-dist/raw/master/installer/certs/esg-truststore.ts; then
        echo "Could not fetch esg-truststore";
        return 1
    fi
    
    if ! wget --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/esg_trusted_certificates.tar -O - -q | tar x -C $ESG_HOME; then
        #certificates tarred into esg_trusted_certificates. (if it breaks, let the user know why
        wget --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/esg_trusted_certificates.tar
        echo "Could't update certs!" >&2
        return 1
    else
        #if here everythng went fine. Replace old cert with this ones    
        [[ -d $ESG_CERT_DIR ]] && rm -r $ESG_CERT_DIR || mkdir -p $(dirname $ESG_CERT_DIR)
        mv $ESG_HOME/esg_trusted_certificates $ESG_CERT_DIR
        touch $ESG_CERT_DIR
        echo "done!" >&2
    fi

}

# Retrieve ESG credentials
unset pass
get_credentials() {
    if check_java
    then
	use_java=1
    else	
	use_java=0
	echo "No suitable java for obtaining certificate - checking for myproxy-logon instead" >&2
	check_myproxy_logon || exit 1
    fi
    #get all certificates
    get_certificates

    if [[ -z "$(find $MYPROXY_GETCERT -type f -mtime -1 2>/dev/null)" ]]; then
        echo -n "(Downloading $MYPROXY_GETCERT... "
        mkdir -p $(dirname $MYPROXY_GETCERT)
        if wget -q --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/getcert.jar -O $MYPROXY_GETCERT;then
            echo 'done)'
            touch $MYPROXY_GETCERT
        else
            echo 'failed)'
        fi
    fi

    #if the user already defined one, use it
    if [[ -z $openId ]]; then
        #try to parse the last valid value if any
        [[ -f "$MYPROXY_STATUS" ]] && openId=$(awk -F= '/^OpenID/ {gsub("\\\\", ""); print $2}' $MYPROXY_STATUS)
        if [[ -z $openId ]]; then
            #no OpenID, we need to ask the user
            echo -n "Please give your OpenID (Example: https://myserver/example/username) ? "
        else
            #Allow the user to change it if desired
            echo -n "Please give your OpenID (hit ENTER to accept default: $openId)? "
        fi
        read -e
        [[ "$REPLY" ]] && openId="$REPLY"
    else
        ((verbose)) && echo "Using user defined OpenID $openId (to change use -o <open_id>)"
    fi

    if grep -q ceda.ac.uk <<<$openId; then
        username=${openId##*/}
        echo -n "Please give your username if different [$username]: "
        read -e
        [[ "$REPLY" ]] && username="$REPLY"
    fi
    


    if [ $use_java -eq 1 ]
    then
        local args=
        #get password
	[[ ! "$pass" ]] && read -sp "MyProxy Password? " pass
        [[ "$openId" ]] && args=$args" --oid $openId"
        [[ "$pass" ]] && args=$args" -P $pass"
        [[ "$username" ]] && args=$args" -l $username"
        
        echo -n $'\nRetrieving Credentials...' >&2
        if ! java $(proxy_to_java) -jar $MYPROXY_GETCERT $args --ca-directory $ESG_CERT_DIR --output $ESG_CREDENTIALS ; then        
            echo "Certificate could not be retrieved"
            exit 1
        fi
        echo "done!" >&2
    else
        args=`openid_to_myproxy_args $openId $username` || exit 1
        if ! myproxy-logon $args -b -o $ESG_CREDENTIALS
	then
            echo "Certificate could not be retrieved"
	    exit 1
        fi
	cp $HOME/.globus/certificates/* $ESG_CERT_DIR/	
    fi
}

openid_to_myproxy_args() {
  python - <<EOF || exit 1
import sys
import re
import xml.etree.ElementTree as ET
import urllib2
openid = "$1"
username = "$2" or re.sub(".*/", "", openid)
e = ET.parse(urllib2.urlopen(openid))
servs = [el for el in e.getiterator() if el.tag.endswith("Service")]
for serv in servs:
    servinfo = dict([(re.sub(".*}", "", c.tag), c.text)
                     for c in serv.getchildren()])
    try:
        if servinfo["Type"].endswith("myproxy-service"):
            m = re.match("socket://(.*):(.*)", servinfo["URI"])
            if m:
                host = m.group(1)
                port = m.group(2)
                print "-s %s -p %s -l %s" % (host, port, username)
                break
    except KeyError:
        continue
else:
    sys.stderr.write("myproxy service could not be found\n")
    sys.exit(1)
EOF
}

# check the certificate validity
check_cert() {
    if [[ ! -f "$ESG_CERT" || $force ]]; then
        #not there, just get it
        get_credentials
    elif which openssl &>/dev/null; then
        #check openssl and certificate
        if ! openssl x509 -checkend $CERT_EXPIRATION_WARNING -noout -in $ESG_CERT 2>/dev/null; then
            echo "The certificate expires in less than $((CERT_EXPIRATION_WARNING / 60 / 60)) hour(s). Renewing..."
            get_credentials
        else
            #ok, certificate is fine
            return 0
        fi
    fi
}

#
# Detect ESG credentials
#
find_credentials() {

    #is X509_USER_PROXY or $HOME/.esg/credential.pem
    if [[ -f "$ESG_CREDENTIALS" ]]; then
        # file found, proceed.
        ESG_CERT="$ESG_CREDENTIALS"
        ESG_KEY="$ESG_CREDENTIALS"
    elif [[ -f "$X509_USER_CERT" && -f "$X509_USER_KEY" ]]; then
        # second try, use these certificates.
        ESG_CERT="$X509_USER_CERT"
        ESG_KEY="$X509_USER_KEY"
    else
        # If credentials are not present, just point to where they should go 
        echo "No ESG Credentials found in $ESG_CREDENTIALS" >&2
            ESG_CERT="$ESG_CREDENTIALS"
            ESG_KEY="$ESG_CREDENTIALS"
            #they will be retrieved later one
    fi


    #chek openssl and certificate
    if (which openssl &>/dev/null); then
        if ( openssl version | grep 'OpenSSL 1\.0' ); then
            echo '** WARNING: ESGF Host certificate checking might not be compatible with OpenSSL 1.0+'
        fi
        check_cert || { (($?==1)); exit 1; }
    fi
    
    if [[ $CHECK_SERVER_CERT == "Yes" ]]; then
        [[ -d "$ESG_CERT_DIR" ]] || { echo "CA certs not found. Aborting."; exit 1; }
        PKI_WGET_OPTS="--ca-directory=$ESG_CERT_DIR"
    fi

    #some wget version complain if there's no file present
    [[ -f $COOKIE_JAR ]] || touch $COOKIE_JAR

    PKI_WGET_OPTS="$PKI_WGET_OPTS --certificate=$ESG_CERT --private-key=$ESG_KEY --save-cookies=$COOKIE_JAR --load-cookies=$COOKIE_JAR --ca-certificate=$ESG_CERT"

}

check_chksum() {
    local file="$1"
    local chk_type=$2
    local chk_value=$3
    local local_chksum=Unknown

    case $chk_type in
        md5) local_chksum=$(md5sum_ $file | cut -f1 -d" ");;
        sha256) local_chksum=$(sha256sum_ $file|awk '{print $1}'|cut -d ' ' -f1);;
        *) echo "Can't verify checksum." && return 0;;
    esac

    #verify
    ((debug)) && echo "local:$local_chksum vs remote:$chk_value" >&2
    echo $local_chksum
}

#Our own md5sum function call that takes into account machines that don't have md5sum but do have md5 (i.e. mac os x)
md5sum_() {
    hash -r
    if type md5sum >& /dev/null; then
        echo $(md5sum $@)
    else
        echo $(md5 $@ | sed -n 's/MD5[ ]*\(.*\)[^=]*=[ ]*\(.*$\)/\2 \1/p')
    fi
}

#Our own sha256sum function call that takes into account machines that don't have sha256sum but do have sha2 (i.e. mac os x)
sha256sum_() {
    hash -r
    if type sha256sum >& /dev/null; then
        echo $(sha256sum $@)
    elif type shasum >& /dev/null; then
        echo $(shasum -a 256 $@)
    else
        echo $(sha2 -q -256 $@)
    fi
}

get_mod_time_() {
    if ((MACOSX)); then
        #on a mac modtime is stat -f %m <file>
        echo "$(stat -f %m $@)"
    else
        #on linux (cygwin) modtime is stat -c %Y <file>
        echo "$(stat -c %Y $@)"
    fi
    return 0;
}

remove_from_cache() {
    local entry="$1"
    local tmp_file="$(grep -ve "^$entry" "$CACHE_FILE")"
    echo "$tmp_file" > "$CACHE_FILE"
    unset cached
}

#Download data from node using cookies and not certificates.
download_http_sec()
{
  #The data to be downloaded.
  data=" $url"
  filename="$file"  

  #Wget args.
  if ((insecure)) 
  then
   wget_args=" --no-check-certificate --cookies=on  --keep-session-cookies --save-cookies $COOKIES_FOLDER/wcookies.txt " 
  else
   wget_args=" --ca-directory=$WGET_TRUSTED_CERTIFICATES --cookies=on --keep-session-cookies --save-cookies $COOKIES_FOLDER/wcookies.txt "  
  fi 

  if ((use_cookies_for_http_basic_auth_start)) || ((use_cookies_for_http_basic_auth)) 
  then
   wget_args=" $wget_args"" --load-cookies $COOKIES_FOLDER/wcookies.txt"    
  fi
  
  if((force_TLSv1))
  then
   wget_args=" $wget_args"" --secure-protocol=TLSv1 "
  fi
  
  
  if [[ ! -z "$ESGF_WGET_OPTS" ]]
  then
    wget_args="$wget_args $ESGF_WGET_OPTS"
  fi  
  

  #use cookies for the next downloads
  use_cookies_for_http_basic_auth=1;
   
  #Debug message.
  if  ((debug))
  then
   echo -e "\nExecuting:\n"
   echo -e "wget $wget_args $data\n"
  fi


  #Try to download the data. 
  command="wget $wget_args -O $filename $data"
  http_resp=$(eval $command  2>&1) 
  cmd_exit_status="$?"
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi
      
  #Extract orp service from url ?
  #Evaluate response.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( "$redirects" == 1 )) && 
  if  echo "$http_resp" | grep -q "/esg-orp/"      
  then
   urls=$(echo "$http_resp" | egrep -o 'https://[^ ]+' | cut -d'/' -f 3)
   orp_service=$(echo "$urls" | tr '\n' ' ' | cut -d' ' -f 2)


   #Use cookies for transaction with orp.
   wget_args=" $wget_args"" --load-cookies $COOKIES_FOLDER/wcookies.txt"    
   
   #Download data using either http basic auth or http login form.
   if [[ "$openid_c" == */openid/  || "$openid_c" == */openid ]]
   then
    download_http_sec_open_id
   else
    download_http_sec_decide_service
   fi
  else  
   if    echo "$http_resp" | grep -q "401 Unauthorized"  \
      || echo "$http_resp" | grep -q "403: Forbidden"  \
      || echo "$http_resp" | grep -q "Connection timed out."  \
      || echo "$http_resp" | grep -q "no-check-certificate"  \
      || (( $cmd_exit_status != 0 ))      
   then 
    echo "ERROR : http request to OpenID Relying Party service failed."
    failed=1
   fi
  fi
}


#Function that decides which implementaion of idp to use.
download_http_sec_decide_service()
{
  #find claimed id

  pos=$(echo "$openid_c" | egrep -o '/' | wc -l)
  username_c=$(echo "$openid_c"  | cut -d'/' -f "$(($pos + 1))")
  esgf_uri=$(echo "$openid_c" | egrep -o '/esgf-idp/openid/')

  host=$(echo "$openid_c"  | cut -d'/' -f 3)
  #test ceda first.

  if [[ -z "$esgf_uri" ]]
  then
   openid_c_tmp="https://""$host""/openid/"
  else
   openid_c_tmp="https://""$host""/esgf-idp/openid/" 
  fi

  command="wget "$openid_c_tmp" --no-check-certificate ${force_TLSv1:+--secure-protocol=TLSv1} -O-"
        
  if [[ ! -z "$ESGF_WGET_OPTS" ]]
  then
   command="$command $ESGF_WGET_OPTS"
  fi  
          
  #Debug message.
  if  ((debug))
  then
   echo -e "\nExecuting:\n"
   echo -e "$command\n"
  fi
            

  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"
  
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 
  

  if    echo "$http_resp" | grep -q "[application/xrds+xml]"  \
     && echo "$http_resp" | grep -q "200 OK"  \
     && (( cmd_exit_status == 0 ))       
  then
   openid_c=$openid_c_tmp
   download_http_sec_open_id
  else
   if [[ -z "$esgf_uri" ]]
   then
    echo "ERROR : HTTP request to OpenID Relying Party service failed."
    failed=1
   else
   download_http_sec_cl_id
   fi
  fi
}


download_http_sec_retry()
{
  echo -e "\nRetrying....\n"
  #Retry in case that last redirect did not work, this happens with older version of wget.
  command="wget $wget_args $data"
      
  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "$command\n"
  fi   
   
  http_resp=$(eval $command  2>&1) 
  cmd_exit_status="$?"

  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi
   
  if    echo "$http_resp" | grep -q "401 Unauthorized"  \
     || echo "$http_resp" | grep -q "403: Forbidden"  \
     || echo "$http_resp" | grep -q "Connection timed out."  \
     || echo "$http_resp" | grep -q "no-check-certificate"  \
     || (( $cmd_exit_status != 0 ))      
  then 
   echo -e "\nERROR : Retry failed.\n"
   #rm "$filename"
   failed=1
  fi #if retry failed.
}

#Function for downloading data using the claimed id.
download_http_sec_cl_id()
{
  #Http request for sending openid to the orp service.
  command="wget --post-data \"openid_identifier=$openid_c&rememberOpenid=on\"  $wget_args -O- https://$orp_service/esg-orp/j_spring_openid_security_check.htm "

  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "wget $command\n"
  fi 
  
  
  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"

  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 
    
  
  #Extract orp service from openid ?
  #Evaluate response.If redirected to idp service send the credentials.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( redirects == 2  )) && 
  if  echo "$http_resp" | grep -q "login.htm"  && (( cmd_exit_status == 0 ))   
  then 
  
   urls=$(echo "$http_resp" | egrep -o 'https://[^ ]+' | cut -d'/' -f 3)
   idp_service=$(echo "$urls"  | tr '\n' ' ' | cut -d' ' -f 2) 
      
   command="wget --post-data  password=\"$password_c\" $wget_args ${quiet:+-q} ${quiet:--v} -O $filename https://$idp_service/esgf-idp/idp/login.htm"
   

   #Debug message.
   if  ((debug))
   then
    echo -e "Executing:\n"
    echo -e "wget $command\n"
   fi 

   #Execution of command.
   http_resp=$(eval $command  2>&1)
   cmd_exit_status="$?"
      
   if ((debug))
   then
    echo -e "\nHTTP response:\n $http_resp\n"
   fi 
        
   #Evaluate response. 
   #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
   #(( "$redirects" != 5 )) \ 
   if    echo "$http_resp" | grep -q "text/html"  \
      || echo "$http_resp" | grep -q "403: Forbidden"  \
      || (( cmd_exit_status != 0 ))        
   then 
    rm "$filename"
    download_http_sec_retry
   fi
 
  else
   echo "ERROR : HTTP request to OpenID Provider service failed."
   failed=1
  fi #if redirected to idp.  
}



download_http_sec_open_id()
{
  #Http request for sending openid to the orp web service.
  command="wget --post-data \"openid_identifier=$openid_c&rememberOpenid=on\" --header=\"esgf-idea-agent-type:basic_auth\" --http-user=\"$username_c\" --http-password=\"$password_c\"  $wget_args ${quiet:+-q} ${quiet:--v} -O $filename https://$orp_service/esg-orp/j_spring_openid_security_check.htm "


  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "$command\n"
  fi 

  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"
  
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 

  #Evaluate response.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( "$redirects" != 7 )) ||
  if   echo "$http_resp" | grep -q "text/html"  ||  (( $cmd_exit_status != 0 ))   
  then
   rm "$filename"
   download_http_sec_retry     
  fi #if error during http basic authentication. 
  
}


download() {
    wget="wget ${insecure:+--no-check-certificate} ${quiet:+-q} ${quiet:--v} -c ${force_TLSv1:+--secure-protocol=TLSv1} $PKI_WGET_OPTS"
    
    while read line
    do
        # read csv here document into proper variables
        eval $(awk -F "' '" '{$0=substr($0,2,length($0)-2); $3=tolower($3); print "file=\""$1"\";url=\""$2"\";chksum_type=\""$3"\";chksum=\""$4"\""}' <(echo $line) )

        #Process the file
        echo -n "$file ..."

        #get the cached entry if any.
        cached="$(grep -e "^$file" "$CACHE_FILE")"
        
        #if we have the cache entry but no file, clean it.
        if [[ ! -f $file && "$cached" ]]; then
            #the file was removed, clean the cache
            remove_from_cache "$file"
            unset cached
        fi
        
        #check it wasn't modified
        if [[ -n "$cached" && "$(get_mod_time_ $file)" == $(echo "$cached" | cut -d ' ' -f2) ]]; then
                    if [[ "$chksum" == "$(echo "$cached" | cut -d ' ' -f3)" ]]; then
                echo "Already downloaded and verified"
                continue
            elif ((update_files)); then
                #user want's to overwrite newer files
                rm $file
                remove_from_cache "$file"
                unset cached
            else
                #file on server is different from what we have. 
                echo "WARNING: The remote file was changed (probably a new version is available). Use -U to Update/overwrite"
                continue
            fi
        fi
        unset chksum_err_value chksum_err_count
        
        while : ; do
            # (if we had the file size, we could check before trying to complete)
            echo "Downloading"
            [[ ! -d "$(dirname "$file")" ]] && mkdir -p "$(dirname "$file")"
            if ((dry_run)); then
                #all important info was already displayed, if in dry_run mode just abort
                #No status will be stored
                break
            else
                if ((use_http_sec))
                then
                 download_http_sec
                 if ((failed))
                 then
                  break
                 fi
                else
                 $wget -O "$file" $url || { failed=1; break; }  
                fi                
            fi

            #check if file is there
            if [[ -f $file ]]; then
                ((debug)) && echo file found
                if [[ ! "$chksum" ]]; then
                    echo "Checksum not provided, can't verify file integrity"
                    break
                fi
                result_chksum=$(check_chksum "$file" $chksum_type $chksum)
                if [[ "$result_chksum" != "$chksum" ]]; then
                    echo "  $chksum_type failed!"
                    if ((clean_work)); then
                        if !((chksum_err_count)); then
                                chksum_err_value=$result_chksum
                                chksum_err_count=2
                            elif ((checksum_err_count--)); then
                                if [[ "$result_chksum" != "$chksum_err_value" ]]; then
                                    #this is a real transmission problem
                                    chksum_err_value=$result_chksum
                                    chksum_err_count=2
                                fi
                            else
                                #ok if here we keep getting the same "different" checksum
                                echo "The file returns always a different checksum!"
                                echo "Contact the data owner to verify what is happening."
                                echo
                                sleep 1
                                break
                            fi
                        
                            rm $file
                            #try again
                            echo -n "  re-trying..."
                            continue
                    else
                            echo "  don't use -p or remove manually."
                    fi
                else
                    echo "  $chksum_type ok. done!"
                    echo "$file" $(get_mod_time_ "$file") $chksum >> $CACHE_FILE
                fi
            fi
            #done!
            break
        done
        
        if ((failed)); then
            echo "download failed"
            # most common failure is certificate expiration, so check this
            #if we have the pasword we can retrigger download
            ((!skip_security)) && [[ "$pass" ]] && check_cert
            unset failed
        fi
        
done <<<"$download_files"

}

dedup_cache_() {
    local file=${1:-${CACHE_FILE}}
    ((debug)) && echo "dedup'ing cache ${file} ..."
    local tmp=$(LC_ALL='C' sort  -r -k1,2 $file | awk '!($1 in a) {a[$1];print $0}' | sort -k2,2)
    ((DEBUG)) && echo "$tmp"
    echo "$tmp" > $file
    ((debug)) && echo "(cache dedup'ed)"
}

http_basic_auth_func_info_message()
{
  echo  "********************************************************************************"
  echo  "*                                                                              *"
  echo  "* Note that new functionality to allow authentication without the need for     *"
  echo  "* certificates is available with this version of the wget script.  To enable,  *"
  echo  "* use the \"-H\" option and enter your OpenID and password when prompted:        *"
  echo  "*                                                                              *"
  echo  "* $ "$(basename "$0")" -H [options...]                                     *"
  echo  "*                                                                              *"
  echo  "* For a full description of the available options use the help option:         *"
  echo  "*                                                                              *"
  echo  "* $ "$(basename "$0")" -h                                                  *"
  echo  "*                                                                              *"
  echo  "********************************************************************************"
}

#
# MAIN
#

if ((!use_http_sec))
then 
 http_basic_auth_func_info_message
fi

echo "Running $(basename $0) version: $version"
((verbose)) && echo "we use other tools in here, don't try to user their proposed 'options' directly"
echo "Use $(basename $0) -h for help."$'\n'

((debug)) && cat<<EOF
** Debug info **
ESG_HOME=$ESG_HOME
ESG_CREDENTIALS=$ESG_CREDENTIALS
ESG_CERT_DIR=$ESG_CERT_DIR
** -- ** -- ** -- ** --

EOF


cat <<'EOF-MESSAGE'
Script created for 136 file(s)
(The count won't match if you manually edit this file!)



EOF-MESSAGE
sleep 1

check_os
((!skip_security)) && find_credentials

if ((use_http_sec))
then 
     
 if (( ! insecure))
 then 
  get_certificates
 fi

 #Cookies folder.
 COOKIES_FOLDER="$ESG_HOME/wget_cookies"
 
 if (( force ))
 then
  if [ -d $COOKIES_FOLDER ] 
  then
   rm -rf $COOKIES_FOLDER
  fi
 fi

 #Create cookies folder. 
 if [[ ! -d $COOKIES_FOLDER ]] 
 then
  mkdir $COOKIES_FOLDER
 fi
 
 if((! use_cookies_for_http_basic_auth_start))
 then

  #Read openid.
  if [[ ! -z "$openId" ]]
  then
   openid_c="$openId"
  elif ( (("$#" > 1)) || (("$#" == 1)) ) 
  then
   openid_c=$1
  else
   read -p    "Enter your openid : " openid_c
  fi
  
  
  #Read username.
  if [[ ! -z "$username_supplied" ]]
  then
   username_c="$username_supplied"
  elif (("$#" == 2))
  then
   username_c=$2
  elif [[ "$openid_c" == */openid/ || "$openid_c" == */openid ]]
  then
   read -p    "Enter username : " username_c
  fi
  
  #Read password.
  read -s -p "Enter password : " password_c
  echo -e "\n"

 fi #use cookies

fi #use_http_sec 


#do we have old results? Create the file if not
[ ! -f $CACHE_FILE ] && echo "#filename mtime checksum" > $CACHE_FILE && chmod 666 $CACHE_FILE

#clean the force parameter if here (at htis point we already have the certificate)
unset force

download

dedup_cache_


echo "done"
